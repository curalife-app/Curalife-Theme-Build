{%- comment -%} If store is US {%- endcomment -%}
{% if shop.name == 'CuraLife' %}
	{% assign invoice_id = '51da85a3c3dfa1f360b48852b64218b2' %}
{% elsif shop.name == 'CuraLife Global' %}
	{% assign invoice_id = '656f0dbf9392657eed7feefc486781fb' %}
{% endif %}

<div class="orders-container">
	{% if customer.orders %}
		<!-- Returns Widget Section -->
		<div class="returns-widget-section">
			<div class="returns-section-header">
				<h2 class="returns-title">Need to Return a Product?</h2>
				<p class="returns-description">
					If you're not completely satisfied with your purchase, you can initiate a return process using our self-service return portal. Follow the simple steps below to get started.
				</p>
			</div>

			<button id="returns-toggle-btn" class="returns-toggle-btn">
				<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
					<polyline points="16 16 12 12 8 16"></polyline>
					<line x1="12" y1="12" x2="12" y2="21"></line>
					<path d="M20 12v-2a2 2 0 0 0-2-2h-2"></path>
					<path d="M13.5 9.5L17 6"></path>
					<path d="M4 12v-2a2 2 0 0 1 2-2h2"></path>
					<path d="M10.5 9.5L7 6"></path>
				</svg>
				Start Return Process
			</button>

			<div id="returns-widget-container" class="returns-widget-container" style="display: none;">
				<script
					src="https://returns.shiphero.com/widget"
					onLoad="ShipHeroReturnsWidget.ReturnsWidget.render({ id: 'Q29ubmVjdGVkU2hvcDpjdXJhbGlmZS1jb21tZXJjZS5teXNob3BpZnkuY29t' }, '#sh-returns');"></script>
				<div id="sh-returns" style="height:500px;width:100%;max-width:500px;margin:0 auto;"></div>
			</div>
		</div>
		<!-- End Returns Widget Section -->

		<div class="orders-filter-bar">
			<div class="filter-group">
				<label for="order-status-filter">Filter by status:</label>
				<select id="order-status-filter">
					<option value="all">All orders</option>
					<option value="fulfilled">Fulfilled</option>
					<option value="partial">Partial</option>
					<option value="unfulfilled">Unfulfilled</option>
				</select>
			</div>

			<div class="search-group desktop">
				<input type="text" id="order-search" placeholder="Search by order number...">
				<button id="order-search-btn" class="search-button no-style" aria-label="Search orders">
					<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
						<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>
					</svg>
				</button>
			</div>
		</div>

		<div class="orders-list-wrapper">
			<ul class="orders-list no-style" id="orders-list">
				{% for order in customer.orders %}
					<li class="order-item" data-order-name="{{ order.name }}" data-fulfillment-status="{{ order.fulfillment_status | default: 'unfulfilled' }}">
						<div class="order-header">
							<div class="order-number">
								<p>Order {{ order.name }}</p>
							</div>
							<div class="order-date">
								<p>{{ order.created_at | date: format: 'abbreviated_date' }}</p>
							</div>
							<div class="order-actions flex flex-row-reverse gap-2">
								<a
									href="{{ shop.secured_url }}/apps/download?ids={{ order.id }}&t=invoice&public_key={{ invoice_id }}&source=shopify_notification_email"
									target="_blank"
									aria-label="Download invoice"
									class="download-link">
									<svg
										xmlns="http://www.w3.org/2000/svg"
										width="18"
										height="18"
										viewBox="0 0 24 24"
										fill="none"
										stroke="currentColor"
										stroke-width="2"
										stroke-linecap="round"
										stroke-linejoin="round">
										<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line>
									</svg>
									<span class="desktop">Download Invoice</span>
								</a>
							</div>
						</div>

						<!-- Order Summary -->
						<div class="order-summary">
							<div class="order-summary-row">
								<div class="order-summary-label">Payment Status:</div>
								<div class="order-summary-value">
									<span class="payment-status-badge {{ order.financial_status }}">
										{{ order.financial_status | capitalize }}
									</span>
								</div>
							</div>
							{% if order.fulfillment_status %}
								<div class="order-summary-row">
									<div class="order-summary-label">Shipping Status:</div>
									<div class="order-summary-value">
										<span class="status-badge {{ order.fulfillment_status }}">
											{% if order.fulfillment_status == 'fulfilled' %}
												<svg
													xmlns="http://www.w3.org/2000/svg"
													width="16"
													height="16"
													viewBox="0 0 24 24"
													fill="none"
													stroke="currentColor"
													stroke-width="2"
													stroke-linecap="round"
													stroke-linejoin="round">
													<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>
												</svg>
												Fulfilled
											{% elsif order.fulfillment_status == 'partial' %}
												<svg
													xmlns="http://www.w3.org/2000/svg"
													width="16"
													height="16"
													viewBox="0 0 24 24"
													fill="none"
													stroke="currentColor"
													stroke-width="2"
													stroke-linecap="round"
													stroke-linejoin="round">
													<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="12" x2="16" y2="12"></line>
												</svg>
												Partial
											{% else %}
												<svg
													xmlns="http://www.w3.org/2000/svg"
													width="16"
													height="16"
													viewBox="0 0 24 24"
													fill="none"
													stroke="currentColor"
													stroke-width="2"
													stroke-linecap="round"
													stroke-linejoin="round">
													<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line>
												</svg>
												{{ order.fulfillment_status | default: 'Unfulfilled' }}
											{% endif %}
										</span>
									</div>
								</div>
							{% endif %}
							<div class="order-summary-row">
								<div class="order-summary-label">Total:</div>
								<div class="order-summary-value order-summary-total">{{ order.total_price | money_with_currency }}</div>
							</div>
							{% if order.shipping_address %}
								<div class="order-summary-row">
									<div class="order-summary-label">Shipping Address:</div>
									<div class="order-summary-value">
										{{ order.shipping_address.name }}
										<br>
										{% if order.shipping_address.company != blank %}
											{{ order.shipping_address.company }}
											<br>
										{% endif %}
										{{ order.shipping_address.address1 }}
										<br>
										{% if order.shipping_address.address2 != blank %}
											{{ order.shipping_address.address2 }}
											<br>
										{% endif %}
										{{ order.shipping_address.city }},
										{% if order.shipping_address.province_code %}
											{{ order.shipping_address.province_code }},
										{% endif %}
										{{ order.shipping_address.country_code | upcase }},
										{{ order.shipping_address.zip }}
									</div>
								</div>
							{% endif %}
							{% if order.note != blank %}
								<div class="order-summary-row">
									<div class="order-summary-label">Order Notes:</div>
									<div class="order-summary-value">{{ order.note }}</div>
								</div>
							{% endif %}
						</div>

						<!-- Order Items -->
						<div class="order-items-container">
							<h3 class="order-items-title">Items</h3>
							{% for a in order.line_items %}
								<div class="order-content">
									<div class="order-product">
										<div class="product-info">
											<div class="product-image">
												{% if a.product.featured_image %}
													{% render 'image-test',
														image: a.product.featured_image,
														lazy: true,
														preload: false,
														alt: a.product.title,
														max_width: 80,
														class: 'w-full h-full object-contain m-0 justify-self-center'
													%}
												{% else %}
													<img loading="lazy" src="{{ 'product-placeholder.svg' | asset_url }}" alt="Product placeholder">
												{% endif %}
											</div>

											<div class="product-name">
												<p>{{ a.product.title }}</p>
												{% if a.variant_title != 'Default Title' and a.variant_title != null %}
													<p class="variant-title">{{ a.variant_title }}</p>
												{% endif %}
												{% if a.sku != blank %}
													<p class="product-sku">SKU: {{ a.sku }}</p>
												{% endif %}
											</div>
										</div>

										<div class="order-details">
											<div class="order-quantity" data-label="Quantity:">
												<p>Quantity: {{ a.quantity }}</p>
											</div>
											<div class="order-price" data-label="Price:">
												<p>{{ a.price | money_with_currency }}</p>
											</div>
											<div class="line-total" data-label="Total:">
												<p>{{ a.line_price | money_with_currency }}</p>
											</div>
										</div>
									</div>
								</div>
							{% endfor %}
						</div>

						<!-- Order Tracking -->
						{% if order.fulfillments.size > 0 %}
							<div class="order-tracking-section">
								<h3 class="tracking-title">Tracking Information</h3>
								{% for fulfillment in order.fulfillments %}
									{% if fulfillment.tracking_numbers.size > 0 %}
										<div class="tracking-info">
											<div class="tracking-details">
												<p class="tracking-label">Shipped via {{ fulfillment.tracking_company | default: 'Shipping Company' }}</p>
												{% for tracking_number in fulfillment.tracking_numbers %}
													<p class="tracking-number">
														<span>Tracking #:</span>
														{% if fulfillment.tracking_url != blank %}
															<a href="{{ fulfillment.tracking_url }}" target="_blank" class="tracking-link">
																{{ tracking_number }}
															</a>
														{% else %}
															{{ tracking_number }}
														{% endif %}
													</p>
												{% endfor %}
											</div>
										</div>
									{% endif %}
								{% endfor %}
							</div>
						{% endif %}
					</li>
				{% endfor %}
			</ul>

			<div id="no-orders-message" class="empty-message hidden">
				<p>No orders match your filter criteria.</p>
			</div>
		</div>

		<script>
			document.addEventListener('DOMContentLoaded', function () {
				// Cache DOM elements
				const statusFilter = document.getElementById('order-status-filter');
				const searchInput = document.getElementById('order-search');
				const searchBtn = document.getElementById('order-search-btn');
				const ordersList = document.getElementById('orders-list');
				const orderItems = ordersList.querySelectorAll('.order-item');
				const noOrdersMessage = document.getElementById('no-orders-message');
				const returnsToggleBtn = document.getElementById('returns-toggle-btn');
				const returnsWidgetContainer = document.getElementById('returns-widget-container');

				// Debounce function to limit expensive operations
				const debounce = (fn, delay) => {
					let timeoutId;
					return function (...args) {
						clearTimeout(timeoutId);
						timeoutId = setTimeout(() => fn.apply(this, args), delay);
					};
				};

				// Returns widget toggle functionality
				if (returnsToggleBtn) {
					returnsToggleBtn.addEventListener('click', function () {
						const isHidden = returnsWidgetContainer.style.display === 'none';
						returnsWidgetContainer.style.display = isHidden ? 'block' : 'none';
						returnsToggleBtn.classList.toggle('active', isHidden);

						// Scroll to widget if opened
						if (isHidden) {
							returnsWidgetContainer.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
						}
					});
				}

				// Optimized filter function
				function filterOrders() {
					const statusValue = statusFilter.value;
					const searchValue = searchInput.value.toLowerCase().trim();
					let visibleCount = 0;

					// Use requestAnimationFrame for smooth UI updates
					requestAnimationFrame(() => {
						orderItems.forEach(item => {
							const orderName = item.getAttribute('data-order-name').toLowerCase();
							const fulfillmentStatus = item.getAttribute('data-fulfillment-status');

							const matchesStatus = statusValue === 'all' || fulfillmentStatus === statusValue;
							const matchesSearch = !searchValue || orderName.includes(searchValue);

							if (matchesStatus && matchesSearch) {
								item.style.display = '';
								visibleCount++;
							} else {
								item.style.display = 'none';
							}
						});

						// Only show the no orders message if there are no visible items
						noOrdersMessage.classList.toggle('hidden', visibleCount > 0);
						ordersList.classList.toggle('hidden', visibleCount === 0);
					});
				}

				// Event listeners with debounce for better performance
				const debouncedFilter = debounce(filterOrders, 300);

				// Run initial filter to ensure proper display state
				setTimeout(filterOrders, 100);

				statusFilter.addEventListener('change', filterOrders);
				searchBtn.addEventListener('click', function (e) {
					e.preventDefault();
					filterOrders();
				});
				searchInput.addEventListener('input', debouncedFilter);
				searchInput.addEventListener('keyup', function (e) {
					if (e.key === 'Enter') {
						filterOrders();
					}
				});
			});
		</script>
	{% else %}
		<div class="panel-body">
			<div class="empty-state">
				<div class="empty-state-icon">
					<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
						<circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>
					</svg>
				</div>
				<h3 class="empty-state-title">No Orders Yet</h3>
				<p class="empty-state-text">You haven't placed any orders yet.</p>
				<a href="/collections/all" class="primary-button empty-state-button">Shop Now</a>
			</div>
		</div>
	{% endif %}
</div>

<style>
	/* Returns Widget Styles */
	.returns-widget-section {
		margin: 0 0 30px 0;
		background-color: white;
		border-radius: var(--radius-xl);
		padding: 30px;
		box-shadow: var(--shadow-md);
		border: 1px solid var(--gray-200);
		position: relative;
		overflow: hidden;
	}

	.returns-widget-section::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 6px;
		height: 100%;
		background: linear-gradient(to bottom, var(--primary), rgba(var(--primary-rgb), 0.7));
		border-radius: var(--radius-full) 0 0 var(--radius-full);
	}

	.returns-section-header {
		margin-bottom: 24px;
		padding-left: 16px;
	}

	.returns-title {
		font-size: 24px;
		font-weight: 700;
		color: var(--gray-900);
		margin: 0 0 12px 0;
	}

	.returns-description {
		color: var(--gray-600);
		font-size: 16px;
		line-height: 1.6;
		margin: 0;
		max-width: 800px;
	}

	.returns-toggle-btn {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 12px;
		background-color: var(--primary);
		color: white;
		border: none;
		border-radius: var(--radius-md);
		padding: 16px 28px;
		font-weight: 600;
		font-size: 16px;
		cursor: pointer;
		transition: all 0.3s ease;
		margin: 0 auto;
		box-shadow: var(--shadow-md);
		width: 100%;
		max-width: 400px;
	}

	.returns-toggle-btn:hover {
		background-color: var(--primary-dark);
		transform: translateY(-2px);
		box-shadow: var(--shadow-lg);
	}

	.returns-toggle-btn.active {
		background-color: var(--gray-800);
	}

	.returns-toggle-btn svg {
		transition: transform 0.3s ease;
	}

	.returns-toggle-btn:hover svg {
		transform: translateY(-2px);
	}

	.returns-widget-container {
		padding-top: 50px;
		animation: fadeIn 0.3s ease;
	}

	/* Order Summary Styles */
	.order-summary {
		padding: 16px 24px;
		background-color: rgba(var(--primary-rgb), 0.03);
		border-radius: var(--radius-md);
		margin: 10px 0 20px;
	}

	.order-summary-row {
		display: flex;
		margin-bottom: 12px;
		gap: 10px;
	}

	.order-summary-row:last-child {
		margin-bottom: 0;
	}

	.order-summary-label {
		min-width: 140px;
		font-weight: 600;
		color: var(--gray-700);
		flex-shrink: 0;
	}

	.order-summary-value {
		color: var(--gray-800);
	}

	.order-summary-total {
		font-weight: 700;
		color: var(--primary);
	}

	.payment-status-badge {
		display: inline-flex;
		align-items: center;
		gap: 6px;
		font-size: 13px;
		font-weight: 600;
		padding: 4px 8px;
		border-radius: var(--radius-full);
	}

	.payment-status-badge.paid {
		background-color: var(--success-light);
		color: var(--success);
	}

	.payment-status-badge.refunded,
	.payment-status-badge.voided {
		background-color: var(--danger-light);
		color: var(--danger);
	}

	.payment-status-badge.pending {
		background-color: var(--warning-light);
		color: var(--warning);
	}

	.payment-status-badge.partially_paid,
	.payment-status-badge.partially_refunded {
		background-color: var(--warning-light);
		color: var(--warning);
	}

	/* Order Items */
	.order-items-container {
		margin-bottom: 20px;
	}

	.order-items-title {
		font-size: 18px;
		font-weight: 700;
		margin: 0 0 12px 0;
		padding-bottom: 8px;
		border-bottom: 1px solid var(--gray-200);
	}

	.variant-title {
		font-size: 14px;
		color: var(--gray-600);
		margin: 4px 0 0 0;
	}

	.product-sku {
		font-size: 13px;
		color: var(--gray-500);
		margin: 4px 0 0 0;
	}

	.line-total {
		font-weight: 600;
	}

	/* Tracking Information */
	.order-tracking-section {
		margin: 20px 0;
		padding: 16px;
		background-color: white;
		border-radius: var(--radius-md);
		border: 1px solid var(--gray-200);
	}

	.tracking-title {
		font-size: 16px;
		font-weight: 700;
		margin: 0 0 12px 0;
		color: var(--gray-800);
	}

	.tracking-info {
		margin-bottom: 12px;
		padding-bottom: 12px;
		border-bottom: 1px solid var(--gray-200);
	}

	.tracking-info:last-child {
		margin-bottom: 0;
		padding-bottom: 0;
		border-bottom: none;
	}

	.tracking-label {
		font-weight: 600;
		margin: 0 0 8px 0;
	}

	.tracking-number {
		display: flex;
		align-items: center;
		gap: 8px;
		margin: 4px 0;
	}

	.tracking-number span {
		color: var(--gray-600);
	}

	.tracking-link {
		color: var(--primary);
		text-decoration: none;
		border-bottom: 1px dotted;
		transition: color 0.2s ease;
	}

	.tracking-link:hover {
		color: var(--primary-dark);
	}

	/* Remove link styles */
	.order-item {
		background-color: white;
		border-radius: var(--radius-xl);
		padding: 24px;
		margin-bottom: 24px;
		box-shadow: var(--shadow-md);
		border: 1px solid var(--gray-200);
		transition: box-shadow 0.3s ease, transform 0.3s ease;
	}

	.order-item:hover {
		box-shadow: var(--shadow-lg);
		transform: translateY(-2px);
	}

	/* Order Item Styles */
	.order-link {
		display: block;
		text-decoration: none;
		color: inherit;
		position: relative;
		cursor: pointer;
	}

	/* Responsive Improvements */
	@media (max-width: 768px) {
		.order-summary-row {
			flex-direction: column;
			gap: 4px;
		}

		.tracking-number {
			flex-direction: column;
			align-items: flex-start;
			gap: 2px;
		}

		.order-header {
			flex-wrap: wrap;
		}

		.download-link {
			justify-content: center;
		}

		.order-item {
			padding: 16px;
		}
	}

	@media (max-width: 480px) {
		.order-summary {
			padding: 12px;
		}

		.order-tracking-section {
			padding: 12px;
		}
	}
</style>
