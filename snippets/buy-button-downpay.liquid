{% comment %}
  New button snippet specifically for Downpay integration.
  Based on buy-buttons-new-4.liquid and Downpay documentation:
  https://docs.downpay.app/en/article/create-a-custom-pay-with-deposit-button-1kabkqz/
{% endcomment %}

{% if shop.name == 'CuraLife Global' %}{% assign isGlobal = true %}{% endif %}

{% comment %} Find Downpay selling plan groups for the current product {% endcomment %}
{%- assign downpay_selling_plan_groups = product.selling_plan_groups | where: 'app_id', 'downpay' -%}
{%- assign has_downpay_plans = false -%}
{%- if downpay_selling_plan_groups.size > 0 -%}
  {%- assign has_downpay_plans = true -%}
  {%- assign downpay_plan_first = downpay_selling_plan_groups[0].selling_plans[0] -%}
{%- endif -%}

{% comment %} Determine selected variant {% endcomment %}
{%- assign selected_variant = variant | default: product.selected_or_first_available_variant -%}

{% comment %}
  Only render the Downpay button if Downpay plans exist for this product.
  Uses the "Simple deposit button for the product page" approach.
{% endcomment %}
{% if has_downpay_plans %}
  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

  <div>
    <product-form class="product-form" data-hide-errors="false" data-section-id="{{ section.id }}">
      {%- comment %} Form specifically for Downpay deposit submission {% endcomment %}
      {%- form 'product', product, id: 'downpay-product-form', class: 'form', novalidate: 'novalidate', data-type: 'downpay-add-to-cart-form' -%}
        {%- comment %} Hidden input for the selected variant ID {% endcomment %}
        <input
          class="submit-variant-id"
          type="hidden"
          name="id"
          value="{{ selected_variant.id }}"
          class="product-variant-id">

        {%- comment %} Hidden input for the first Downpay selling plan ID {% endcomment %}
        <input
          class="submit-selling-plan-id"
          type="hidden"
          name="selling_plan"
          value="{{ downpay_plan_first.id }}">

        <div class="product-form__buttons main-submit-wrapper flex">
          {% if isBuyQuantity %}
            {%- comment %} Keep quantity selector if needed {% endcomment %}
            <div class="qty flex">
              <input type="text" name="quantity" maxlength="12" value="1" title="" class="input-text">
              <div class="qty_inc_dec">
                <i class="increment">+</i>
                <i class="decrement">-</i>
              </div>
            </div>
          {% else %}
            {%- comment %} Ensure quantity is 1 if selector is hidden {% endcomment %}
            <input type="hidden" name="quantity" value="1">
          {% endif %}

          {%- comment %} The Downpay submit button {% endcomment %}
          <button
            type="submit"
            name="add"
            data-sku="{{ selected_variant.sku }}"
            data-purchase-type="downpay-deposit"
            data-buy-box="{{ ctaTemaplate | default: 'downpay-button' }}"
            data-variant-id="{{ selected_variant.id }}"
            class="buy-button clickable text-black product-form__submit button--full-width justify-center button--primary text-[20px] p-0 min-h-[50px] items-center bg-orange {{ buttonClass }}"
            data-downpay-submit
            {% comment %} Check if variant is available {% endcomment %}
            {% if selected_variant.available == false %}disabled{% endif %}
            >
            <span class="submit-title">{{ buttonText | default: 'Pay Deposit Now' }}</span>
            <div class="loading-overlay__spinner hidden">
              <svg aria-hidden="true" focusable="false" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                <circle class="path !stroke-white" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
              </svg>
            </div>
          </button>
        </div>
      {%- endform -%}

      {%- comment %} Re-use existing error message structure {% endcomment %}
      <div class="product-form__error-message-wrapper bg-light-red p-2 mt-1 text-center rounded-sm" role="alert" hidden>
        <div class="error-wrapper flex items-center justify-center">
          <svg aria-hidden="true" focusable="false" class="icon icon-error h-[20px] mr-1" viewBox="0 0 13 13">
            <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
            <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
            <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
            <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
          </svg>
          <span class="product-form__error-message text-[12px]"></span>
        </div>

        <div class="notice"></div>
          Please
          <a class="underline" href="https://help{% if isGlobal %}-global{% endif %}.curalife.com/">Contact Us</a>
          , we'd love to help!
        </div>
      </div>
    </product-form>
  </div>
{% else %}
  {%- comment %} Fallback or message if Downpay is not available for this product? Or render nothing? {% endcomment %}
  {%- comment %} Example: <p>Deposit option not available for this product.</p> {% endcomment %}
{% endif %}

{% comment %} Keep quantity selector logic if needed {% endcomment %}
{% if isBuyQuantity %}
  <style>
    .qty {
      float: left;
      width: 100px;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    .qty_inc_dec .increment,
    .qty_inc_dec .decrement {
      cursor: pointer;
      font-size: 1.2em;
      height: 50%;
      background-color: #fff;
      border: 1px solid #ccc;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .qty_inc_dec .increment {
      border-bottom: 0;
      line-height: 25px;
    }

    .qty_inc_dec {
      width: 30px;
      height: 100%;
      display: inline-block;
    }

    .qty input[type='text'] {
      float: left;
      font-family: 'Open Sans', sans-serif;
      outline: 0;
      font-size: 1.2em;
      text-align: center;
      width: 50px;
      height: 100%;
      color: #2a2a2a;
      line-height: 40px;
      border: 1px solid #ccc;
      border-right: 0;
      border-radius: 10px 0 0 10px;
    }

    /* Quantity Selector Transition */
    .qty {
      transition: width 0.3s ease;
      width: -webkit-fill-available;
    }

    .qty_inc_dec {
      transition: opacity 0.3s ease;
    }
  </style>

  <script>
    // NOTE: This script targets generic selectors like 'input[name="quantity"]',
    // '.increment', '.decrement'. Ensure these are unique or scoped if multiple
    // quantity selectors exist on the same page.
    function incrementQty(button) {
      var form = button.closest('form');
      if (!form) return;
      var quantityInput = form.querySelector('input[name="quantity"]');
      if (!quantityInput) return;
      var value = parseInt(quantityInput.value);
      value = isNaN(value) ? 1 : value;
      value++;
      quantityInput.value = value;
    }

    function decrementQty(button) {
       var form = button.closest('form');
      if (!form) return;
      var quantityInput = form.querySelector('input[name="quantity"]');
      if (!quantityInput) return;
      var value = parseInt(quantityInput.value);
      value = isNaN(value) ? 1 : value;
      value = value > 1 ? value - 1 : 1;
      quantityInput.value = value;
    }

    document.addEventListener('click', function (event) {
      if (event.target.matches('.increment')) {
         event.stopPropagation();
         incrementQty(event.target);
      }
      if (event.target.matches('.decrement')) {
         event.stopPropagation();
         decrementQty(event.target);
      }
    }, true); // Use capture phase to potentially handle nested forms better

  </script>
{% endif %}

{% comment %}
  NOTE: The 'useCustomHandler' logic from the original file is omitted here,
  as the Downpay documentation implies standard form submission is required
  for the selling_plan parameter to work correctly. If JS handling is needed,
  it would require custom development to submit the form data via AJAX
  while ensuring the selling_plan parameter is included.
{% endcomment %}