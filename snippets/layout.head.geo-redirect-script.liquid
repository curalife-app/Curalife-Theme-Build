{% capture CFH %}{{ content_for_header }}{% endcapture %}{{CFH}}

  {% assign bypassUsers = 'yotam@curalife.com|yotamon@gmail.com|ana@curalife.com' %}

{% if CFH contains 'adminBarInjector' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Cause User Is Admin.")</script>
{% elsif CFH contains 'admin-bar-iframe' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Cause User Is Admin.")</script>
{% elsif CFH contains 'preview_bar_injector-' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Cause User Is Admin.")</script>
{% elsif CFH contains "redirect=false" %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled Through URL Parameter.")</script>
{% elsif bypassUsers contains customer.email %}
  {% assign admin = true %}
  <script>console.log("Redirect Cause User Is Employee")</script>
{% endif %}

{%- comment -%} remove redirect for curaeats product page {%- endcomment -%}
{% if request.path contains 'products/curalin-pack-sub' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled For CuraEats")</script>
{% endif %}

{%- comment -%} remove redirect for blog pages {%- endcomment -%}
{% assign isBlog = false %}
{% if request.path contains '/blogs/' %}
  {% assign isBlog = true %}
  <script>console.log("Redirect Disabled For Blog")</script>
{% endif %}

{%- comment -%} remove redirect for affiliate page {%- endcomment -%}
{% if request.path contains '/pages/curalin-clinically-tested-blood-sugar-support' %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled For Affiliate Page")</script>
{% endif %}

{% if customer.b2b? %}
  {% assign admin = true %}
  <script>console.log("Redirect Disabled For Wholesale Customer")</script>
{% endif %}


{% unless admin %}
  <script>
    function redirectTo(url) {
      const path = window.location.pathname;       // Get the current path
      const queryString = window.location.search;  // Get the query string
      window.location.href = url + path + queryString; // Redirect with both path and query string
    }

    function detectRobot(userAgent) {
      const robotRegexes = [
        /bot/, /spider/, /crawl/,
        /APIs-Google/, /AdsBot/, /Googlebot/,
        /mediapartners/, /Google Favicon/,
        /FeedFetcher/, /Google-Read-Aloud/,
        /DuplexWeb-Google/, /googleweblight/,
        /bing/, /yandex/, /baidu/, /duckduck/, /yahoo/,
        /ecosia/, /ia_archiver/,
        /facebook/, /instagram/, /pinterest/, /reddit/,
        /slack/, /twitter/, /whatsapp/, /youtube/,
        /semrush/,
      ];

      return robotRegexes.some(regex => regex.test(userAgent));
    }

    function getCountryFromService() {
      return fetch('https://geo.curalife.com/')
        .then(response => response.json())
        .then(data => data.country)
        .catch(error => {
          console.error('Error fetching country data:', error);
          return null;
        });
    }

    function handleRedirectionForCountry(country) {
      const host = location.hostname === 'global.curalife.com' ? 'Global' : 'USA';
      const countriesUs = ['US', 'PR', 'CA', 'AU'];
      const countryUrls = {
        'LT': 'https://curalife.lv',
        'LV': 'https://curalife.lv',
        'AT': 'https://curalife.at',
        'KW': 'https://trycuralife.com'
      };

      if (countryUrls[country]) {
        redirectTo(countryUrls[country]);
      } else if (host === 'USA' && !countriesUs.includes(country) && !{{ isBlog }}) {
        redirectTo('https://global.curalife.com');
      } else if (host === 'Global' && countriesUs.includes(country) && !{{ isBlog }}) {
        redirectTo('https://curalife.com');
      }
    }

    const userAgent = navigator.userAgent;
    const isRobot = detectRobot(userAgent);

    if (!isRobot) {
      const cachedCountry = localStorage.getItem('country');
      if (cachedCountry) {
        handleRedirectionForCountry(cachedCountry);
      } else {
        getCountryFromService().then(country => {
          if (country) {
            localStorage.setItem('country', country);
            handleRedirectionForCountry(country);
          }
        });
      }
    }
  </script>
{% endunless %}