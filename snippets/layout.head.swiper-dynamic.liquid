{% comment %}
  Include this snippet in sections that use Swiper
  Usage: {% render 'layout.head.swiper-dynamic', selector: '.my-slider-class' %}
{% endcomment %}

{% assign selector = selector | default: '.swiper' %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Check if the section using this swiper is visible
    // Ensure selector is properly interpolated in Liquid before sending to JS
    {% assign clean_selector = selector | replace: "{", "" | replace: "}", "" %}
    const selectorString = '{{ clean_selector | escape }}';
    console.log('[Swiper Dynamic] Looking for elements with selector:', selectorString);

    const swiperElements = document.querySelectorAll(selectorString);
    console.log('[Swiper Dynamic] Found elements:', swiperElements.length);

    if (swiperElements.length > 0) {
      // Check if any swiper element is in viewport or close to it
      let isVisible = false;

      swiperElements.forEach(function(element) {
        const rect = element.getBoundingClientRect();
        const inViewport = (
          rect.top <= (window.innerHeight || document.documentElement.clientHeight) + 500 &&
          rect.bottom >= -500
        );
        console.log('[Swiper Dynamic] Element visibility check:', inViewport, rect);
        if (inViewport) {
          isVisible = true;
        }
      });

      console.log('[Swiper Dynamic] Is visible in viewport:', isVisible);

      // If a swiper element is visible, load swiper or initialize it
      if (isVisible) {
        if (window.loadSwiper) {
          console.log('[Swiper Dynamic] Calling loadSwiper function');
          window.loadSwiper();
        } else if (!window.isSwiperLoaded && !window.isSwiperLoading) {
          console.log('[Swiper Dynamic] loadSwiper not available, loading Swiper directly');
          // Swiper observer not loaded, load swiper directly
          const link = document.createElement("link");
          link.rel = "stylesheet";
          link.href = "https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css";
          document.head.appendChild(link);

          const script = document.createElement("script");
          script.src = "https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js";
          document.body.appendChild(script);

          window.isSwiperLoaded = false;
          window.isSwiperLoading = true;

          script.onload = function() {
            window.isSwiperLoaded = true;
            window.isSwiperLoading = false;
            console.log('[Swiper Dynamic] Swiper loaded directly for: ' + selectorString);
          };
        }
      } else {
        // Add to observer if swiper observer is available
        if (window.swiperObserver) {
          console.log('[Swiper Dynamic] Adding elements to observer');
          swiperElements.forEach(function(element) {
            if (!element.dataset.swiperObserved) {
              window.swiperObserver.observe(element);
              element.dataset.swiperObserved = 'true';
            }
          });
        } else {
          console.log('[Swiper Dynamic] swiperObserver not available');
        }
      }
    }
  });
</script>