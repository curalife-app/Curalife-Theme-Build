<script>
// This should be included once in your theme's JavaScript bundle
document.addEventListener('DOMContentLoaded', function() {
  if ('IntersectionObserver' in window) {
    const imageObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const image = entry.target;
          const sources = image.parentElement.querySelectorAll('source');

          sources.forEach(source => {
            if (source.dataset.srcset) {
              source.srcset = source.dataset.srcset;
            }
          });

          image.src = image.dataset.src;
          image.srcset = image.dataset.srcset;
          image.classList.add('loaded');
          imageObserver.unobserve(image);
        }
      });
    }, {
      rootMargin: '50px 0px',
      threshold: 0.01
    });

    document.querySelectorAll('img[data-src]').forEach(img => {
      if (img.loading !== 'eager') {
        imageObserver.observe(img);
      } else {
        img.src = img.dataset.src;
        img.srcset = img.dataset.srcset;
        img.classList.add('loaded');
      }
    });
  } else {
    // Fallback for browsers that don't support IntersectionObserver
    document.querySelectorAll('img[data-src]').forEach(img => {
      img.src = img.dataset.src;
      img.srcset = img.dataset.srcset;
      img.classList.add('loaded');
    });
  }
});

// Adaptive serving based on network conditions
if ('connection' in navigator) {
  if (navigator.connection.saveData) {
    // Use smaller images when Save-Data is enabled
    document.documentElement.classList.add('save-data');
  }
  if (['slow-2g', '2g', '3g'].includes(navigator.connection.effectiveType)) {
    // Use smaller images on slow connections
    document.documentElement.classList.add('slow-connection');
  }
}
</script>

<style>
  /* This should be included once in your theme's CSS bundle */
.responsive-image-wrapper {
  position: relative;
  overflow: hidden;
  background-color: #f0f0f0; /* Placeholder color */
}

.responsive-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.responsive-image.loaded {
  opacity: 1;
}

/* Adaptive serving styles */
.save-data .responsive-image,
.slow-connection .responsive-image {
  object-fit: contain;
}

/* Use content-visibility for off-screen images */
.responsive-image-wrapper {
  content-visibility: auto;
}

/* Prevent layout shifts */
img {
  overflow-clip-margin: content-box;
}
</style>