<!doctype html>
<html class="js" lang="{{ request.locale.iso_code }}">
  <head>
    {{ 'tailwind.css' | asset_url | stylesheet_tag }}
    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'style-guide.css' | asset_url | stylesheet_tag }}

    {% unless request.design_mode %}
      {% render 'layout.head.geo-redirect-script' %}
      {% render 'layout.head.redirects-script' %}
      {% comment %} {% render 'layout.head.google-tag-manager'%} {% endcomment %}
      {% comment %} {% render 'layout.head.sentry-io' %} {% endcomment %}
      {% if shop.name == "CuraLife Global" %}{% render "pandectes-rules" %}{% endif %}
    {% endunless %}

    {% render 'layout.head.meta-tags' %}
    {% render 'layout.head.fonts' %}
    {% render 'layout.head.canonicals' %}

    <script rel="preload" src="{{ 'constants.js' | asset_url }}" defer></script>
    <script rel="preload" src="{{ 'pubsub.js' | asset_url }}" defer></script>
    <script rel="preload" src="{{ 'global.js' | asset_url }}" defer></script>
    <link rel="preconnect" href="https://cdn.shopify.com">

    {{ content_for_header }}

    {% render 'layout.head.theme-css' %}

    <script src="https://kit.fontawesome.com/2551503516.js" crossorigin="anonymous" defer></script>
    {% render 'layout.head.swiper' %}
    {% render 'layout.head.animate-on-scroll' %}

    {% comment %} {% render 'layout.head.lazyload-images' %} {% endcomment %}

    {% if product.handle contains 'curalin' %}
      <script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/3.3.0/model-viewer.min.js" defer></script>
    {% endif %}

    <script>
      document.documentElement.classList.replace('no-js', 'js');
      if (Shopify.designMode) {document.documentElement.classList.add('shopify-design-mode');}
    </script>

    {% unless request.design_mode %}
      {% comment %} {% render 'layout.head.microsoft-clarity' %} {% endcomment %}
      {% comment %} {% render 'layout.head.gorgias' %} {% endcomment %}
    {% endunless %}

		<script>
			// Gift product combinations mapping
			const giftProductCombination = {
				"curalin-black-friday-week": "free-curaslim",
				"curaslim-black-friday-week": "free-curalin",
				"curaslin-curaslim-black-friday-week": "free-curalin"
			};

			// Function to remove gift item from cart
			async function removeGiftFromCart(giftHandle) {
				try {
					// First, get the current cart to find the gift variant ID
					const cartResponse = await fetch('/cart.js');
					const cart = await cartResponse.json();

					// Find the gift item in the cart
					const giftItem = cart.items.find(item =>
						item.handle === giftHandle
					);

					if (!giftItem) {
						console.log('Gift item not found in cart');
						return;
					}

					// Remove the gift item using the Shopify AJAX API
					const response = await fetch('/cart/change.js', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({
							id: giftItem.key,
							quantity: 0
						})
					});

					if (!response.ok) {
						throw new Error('Failed to remove gift item');
					}

					// Refresh the cart section (optional - depends on your cart implementation)
					if (typeof window.refreshCart === 'function') {
						window.refreshCart();
					}

				} catch (error) {
					console.error('Error removing gift item:', error);
				}
			}

			// Function to get product handle from cart item
			function getProductHandle(cartItem) {
				const productLink = cartItem.querySelector('a.upcart-product-title-link');
				if (!productLink) return null;

				const url = productLink.getAttribute('href');
				return url.split('/').pop().split('?')[0];
			}

			// Initialize event listeners
			function initGiftRemovalHandlers() {
				document.addEventListener('click', async (event) => {
					// Check if clicked element is a trash button
					const trashButton = event.target.closest('.styles_TrashButton__deleteButton__8uIHq');
					if (!trashButton) return;

					// Find the cart item container
					const cartItem = trashButton.closest('.upcart-product-item');
					if (!cartItem) return;

					// Get the product handle
					const productHandle = getProductHandle(cartItem);
					if (!productHandle) return;

					// Check if this product has an associated gift
					const giftHandle = giftProductCombination[productHandle];
					if (giftHandle) {
						// Remove the associated gift item
						await removeGiftFromCart(giftHandle);
					}
				});
			}

			// Initialize when DOM is ready
			if (document.readyState === 'loading') {
				document.addEventListener('DOMContentLoaded', initGiftRemovalHandlers);
			} else {
				initGiftRemovalHandlers();
			}
		</script>

    {% comment %} <script>
      (function () {
        var script = document.createElement('script');
        script.src =
          'https://unpkg.com/web-vitals@4/dist/web-vitals.attribution.iife.js';
        script.onload = function () {
          // When loading `web-vitals` using a classic script, all the public
          // methods can be found on the `webVitals` global namespace.
          webVitals.onCLS(console.log);
          webVitals.onINP(console.log);
          webVitals.onLCP(console.log);
        };
        document.head.appendChild(script);
      })();
    </script> {% endcomment %}
  </head>

  <body id="page-{{ page.handle | default: product.handle }}" class="{% if customer.email contains '@curalife.com' %}admin{% endif %} {% if customer.b2b? %}b2b{% endif %}">
    {% if additional_checkout_buttons %}
      <div style="display: none !important">
          {{ content_for_additional_checkout_buttons }}
      </div>
    {% endif %}

    {%- render 'cart-drawer' -%}

    {% sections 'header-group' %}

    <main id="MainContent" class="content-for-layout" role="main">
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    {% unless request.design_mode %}
      {% render 'layout.footer.accessibilty-widget' %}
      {% comment %} {% render 'layout.footer.woopra-snippet' %} {% endcomment %}
      {% comment %} {% render 'script.pass-url-params' %} {% endcomment %}

      {% comment %} appLoving script {% endcomment %}
      <script>window.ALBSS = {event_key: '4eb232bb-4ced-466a-b7ad-f917db9357f2'};</script>
      <script src="https://c.albss.com/p/l/loader.iife.js"></script>
    {% endunless %}

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }
    </script>

    <script type="speculationrules">
      {
        "prerender": [
          {
            "where": {
              "and": [
                { "href_matches": "/*" },
                { "not": { "href_matches": "{{ request.path }}" } },
                { "selector_matches": ".prerender" }
              ]
            },
            "eagerness": "eager"
          }
        ]
      }
    </script>
  </body>
</html>