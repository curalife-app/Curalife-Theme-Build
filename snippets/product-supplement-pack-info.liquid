<section class="pack-info-section instance-{{ index }}">
	<div class="container">
		<div class="wrap mbl:flex-col mbl:items-center flex gap-4">
			<div class="titles mbl:flex-col mbl:items-baseline gap-2">
				<h2 class="title">{{ product.title }}</h2>
				<div class="subtitle">{{ product.description }}</div>
				<ul class="highlights check-list">
					{% for highlight in product.metafields.custom['product-highlights'].value %}
						<li class="highlight">
							<b>{{ highlight.title }}</b><br>
							{{ highlight.subtitle }}
						</li>
					{% endfor %}
				</ul>
			</div>
			<img class="product-image" src="{{ product.metafields.custom.pill_image | img_url: 'original' }}" alt="{{ product.title }}" loading="lazy">
		</div>

		<div class="tabbed-content tabs-side">
			<nav class="tabs">
				<div class="tab">
					<a href="#instructions-{{ index }}">
						Usage Instructions
						<i>></i>
					</a>
				</div>
				{% if product.metafields.custom.ingredients.value %}
					<div class="tab">
						<a href="#ingredients-{{ index }}">
							Ingredients
							<i>></i>
						</a>
					</div>
				{% endif %}
				<div class="tab">
					<a href="#facts-{{ index }}">
						Supplement Facts
						<i>></i>
					</a>
				</div>
			</nav>

			<div class="content">
				<!-- Usage Instructions -->
				<div id="instructions-{{ index }}" class="item" data-title="Usage Instructions">
					<!-- Header for desktop -->
					<h3 class="desktop-header">Usage Instructions</h3>
					<div class="instructions item-content">
						{% for step in product.metafields.custom.instructions.value %}
							<div class="step">
								<div class="capsules">
									{% for item in (1..step.capsules) %}
										{% if product.tags contains 'gummies' %}
											<img class="gummies m-0" src="{{ "icon-gummy.png" | asset_url }}" width="20" height="31" alt="Capsule Pill" loading="lazy">
										{% else %}
											<img class="caps m-0" src="{{ "icon-capsule.png" | asset_url }}" width="20" height="31" alt="Capsule Pill" loading="lazy" style="min-width: 35px">
										{% endif %}
									{% endfor %}
								</div>
								<div>{{ step.subtitle }}</div>
							</div>
						{% endfor %}
					</div>
				</div>

				{% if product.metafields.custom.ingredients.value %}
					<!-- Ingredients -->
					<div id="ingredients-{{ index }}" class="item" data-title="Ingredients">
						<h3 class="desktop-header">Ingredients</h3>
						<div class="ingredients item-content">
							{% for ingredient in product.metafields.custom.ingredients.value %}
								<div class="ingredient">
									{% assign ingredient_handle = ingredient | downcase | replace: ' ', '-' %}
									<img src="{{ "product-supplement-pack-info-ingredient-icon-" | append: ingredient_handle | append: ".png" | asset_url }}" alt="Ingredient" loading="lazy">
									<p>{{ ingredient }}</p>
								</div>
							{% endfor %}
						</div>
					</div>
				{% endif %}

				<!-- Supplement Facts -->
				<div id="facts-{{ index }}" class="item" data-title="Supplement Facts">
					<h3 class="desktop-header">Supplement Facts</h3>
					<div class="facts item-content">
						<img src="{{ product.metafields.custom.supplement_fact | image_url }}" alt="Supplement Facts" loading="lazy">
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	/* General Styles */
	.pack-info-section {
		background: var(--primary-color-lightest);
	}
	/* Mobile Styles (max-width: 768px) */
	@media all and (max-width: 768px) {
		.pack-info-section {
			padding-bottom: 75vw;
			padding-top: 10vw;
		}
		.pack-info-section .tabbed-content .tabs {
			display: block;
		}
		/* Hide the extra header on mobile */
		.desktop-header {
			display: none;
		}
		/* Tab panels: hidden by default */
		.pack-info-section .tabbed-content .item .item-content {
			transition: opacity 0.8s ease-in-out;
			opacity: 0;
			visibility: hidden;
			height: 0;
		}
		.pack-info-section .tabbed-content .item.active .item-content {
			opacity: 1;
			visibility: visible;
			height: auto;
			padding: 5vw 0;
		}
		/* Optional accordion indicator */
		.pack-info-section .item::after {
			content: "+";
			font-size: 30px;
			position: absolute;
			top: 5px;
			right: 2vw;
			border: 2px solid var(--light-green);
			border-radius: 50%;
			width: 5vw;
			height: 5vw;
			display: flex;
			align-items: center;
			justify-content: center;
			color: var(--light-green);
		}
		.pack-info-section .item.active::after {
			content: "-";
		}
	}
	/* Desktop Styles (min-width: 800px) */
	@media all and (min-width: 800px) {
		/* Show headers */
		.desktop-header {
			display: block;
			font-size: 1.5em;
			font-weight: bold;
			margin-bottom: 1em;
			text-align: center;
		}
		.pack-info-section .tabbed-content {
			display: flex;
			flex-direction: row;
			align-items: flex-start;
			height: auto;
		}
		/* Hide tabs nav */
		.pack-info-section .tabbed-content .tabs {
			display: none;
		}
		.pack-info-section .tabbed-content .content {
			display: flex;
			gap: 20px;
			width: 100%;
		}
		.pack-info-section .tabbed-content .content .item {
			flex: 1;
			position: relative;
		}
		/* Always show panel content */
		.pack-info-section .tabbed-content .item .item-content {
			opacity: 1 !important;
			visibility: visible !important;
			height: auto !important;
			padding: 10px;
		}
		.pack-info-section .item::after,
		.pack-info-section .item::before {
			display: none;
		}
	}
</style>

<script>
	(function() {
		var instanceSelector = '.pack-info-section.instance-{{ index }}';
		var tabsNav = document.querySelector(instanceSelector + ' .tabbed-content .tabs');
		var items = document.querySelectorAll(instanceSelector + ' .tabbed-content .item');

		// Clear active classes on all tabs and panels
		function clearActive() {
			if (tabsNav) {
				var links = tabsNav.querySelectorAll('a');
				links.forEach(function(link) {
					link.classList.remove('active');
				});
			}
			items.forEach(function(item) {
				item.classList.remove('active');
			});
		}

		// Set a default active tab on mobile (first tab)
		function setDefaultActive() {
			if (tabsNav) {
				var links = tabsNav.querySelectorAll('a');
				if (links.length > 0) {
					links[0].classList.add('active');
					var target = links[0].getAttribute('href');
					var firstItem = document.querySelector(target);
					if (firstItem) {
						firstItem.classList.add('active');
					}
				}
			}
		}

		// Delegated mobile click handler â€“ only active on mobile view
		function mobileTabHandler(e) {
			if (window.innerWidth > 768) return; // Only process clicks on mobile
			var clickedLink = e.target.closest('a');
			if (!clickedLink || !tabsNav.contains(clickedLink)) return;
			e.preventDefault();
			clearActive();
			clickedLink.classList.add('active');
			var targetId = clickedLink.getAttribute('href');
			var targetItem = document.querySelector(targetId);
			if (targetItem) targetItem.classList.add('active');
		}

		// Initialize based on viewport width
		function initTabs() {
			if (window.innerWidth <= 768) {
				clearActive();
				setDefaultActive();
			} else {
				// On desktop, simply show all panels
				items.forEach(function(item) {
					item.classList.add('active');
				});
			}
		}

		// Initialize on page load
		initTabs();

		// Bind one delegated event listener for mobile tabs
		if (tabsNav) {
			tabsNav.addEventListener('click', mobileTabHandler);
		}

		// Re-initialize on window resize (debounced)
		window.addEventListener('resize', function() {
			clearTimeout(window.resizeTabTimer);
			window.resizeTabTimer = setTimeout(function() {
				initTabs();
			}, 250);
		});
	})();
</script>
