{% comment %}
	INGREDIENT TABS SECTION
	This section replicates the "blue box" layout with tabs on the left and an image on the right.
{% endcomment %}

<section id="ingredient-tabs-section" class="ingredient-tabs-section">
	<div class="container">
		<!-- Blue Box Container -->
		<div class="blue-box">
			<div class="left-column">
				<!-- Tab Buttons -->
				<ul class="ingredient-tab-buttons no-style">
					{% for block in section.blocks %}
						<li
							class="tab-button"
							data-tab="tab-{{ block.id }}"
							role="button"
							aria-controls="tab-{{ block.id }}"
							aria-selected="false"
						>
							{{ block.settings.ingredient_title }}
						</li>
					{% endfor %}
				</ul>

				<!-- Ingredient Text (shown below the tab buttons) -->
				{% for block in section.blocks %}
					<div
						class="ingredient-text"
						id="tab-{{ block.id }}"
						role="tabpanel"
						hidden
					>
						<h3>{{ block.settings.ingredient_title }}</h3>
						<p>{{ block.settings.ingredient_description }}</p>
					</div>
				{% endfor %}
			</div>

			<!-- Image Area on the Right -->
			<div class="right-column">
				<!-- We'll dynamically switch images with JS to match the selected tab -->
				{% for block in section.blocks %}
					{% if block.settings.ingredient_image %}
						<div class="ingredient-image" id="img-{{ block.id }}" hidden>
							<img
								src="{{ block.settings.ingredient_image | img_url: 'master' }}"
								alt="{{ block.settings.ingredient_title | escape }}"
							/>
						</div>
					{% endif %}
				{% endfor %}
			</div>
		</div>
	</div>

	<!-- CSS (adjust colors, spacing, etc. to match your design) -->
	<style>
		/* Container & Headings */
		.ingredient-tabs-section {
			padding: 20px;
			max-width: 1200px;
			margin: 0 auto;
		}

		.section-heading {
			font-size: 28px;
			margin-bottom: 10px;
			color: #333;
		}

		.section-subheading {
			font-size: 16px;
			color: #666;
			margin-bottom: 20px;
			line-height: 1.4em;
		}

		/* The "Blue Box" wrapper */
		.blue-box {
			background-color: var(--primary-color);
			display: flex;
			flex-wrap: wrap;
			padding: 20px;
			gap: 20px;
		}

		/* Left Column: Tabs + Text */
		.left-column {
			flex: 1 1 300px;
			display: flex;
			flex-direction: column;
			max-width: 500px; /* Adjust as needed */
		}

		/* Tab Buttons */
		.ingredient-tab-buttons {
			display: flex;
			flex-wrap: wrap; /* so the buttons wrap if they exceed width */
			list-style: none;
			padding: 0;
			margin: 0 0 15px;
			gap: 10px;
		}

		.tab-button {
			background-color: var(--bg-color);
			color: #fff;
			padding: 8px 12px;
			border-radius: 20px;
			cursor: pointer;
			border: none;
			font-size: 14px;
			transition: background-color 0.2s, color 0.2s;
		}

		.tab-button:hover {
			background-color: white;
		}

		.tab-button.active {
			background-color: white;
			font-weight: bold;
		}

		/* Ingredient Text (below the buttons) */
		.ingredient-text {
			display: none; /* Hidden by default; toggled by JS */
			margin-top: 10px;
		}

		.ingredient-text h3 {
			margin: 0 0 8px;
			color: {{ page.metafields.custom.product.metafields.custom.secondary_color | default: "var(--seconday-color)" }};
		}

		.ingredient-text p {
			color: white;
			line-height: 1.4em;
		}

		/* Right Column: Image */
		.right-column {
			flex: 1 1 300px;
			display: flex;
			justify-content: center;
			align-items: center;
			position: relative;
		}

		.ingredient-image {
			display: none; /* Hidden by default; toggled by JS */
			max-width: 100%;
			text-align: center;
		}

		.ingredient-image img {
			max-width: 100%;
			height: auto;
			border-radius: 15px;
		}

		/* Responsive adjustments (optional) */
		@media (max-width: 768px) {
			.blue-box {
				flex-direction: column;
			}
			.left-column, .right-column {
				max-width: 100%;
			}
		}
	</style>

	<!-- JavaScript for Tab Behavior -->
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			const tabButtons = document.querySelectorAll('#ingredient-tabs-section .tab-button');
			const textBlocks = document.querySelectorAll('#ingredient-tabs-section .ingredient-text');
			const imageBlocks = document.querySelectorAll('#ingredient-tabs-section .ingredient-image');

			function showTab(tabId) {
				// Hide all text blocks
				textBlocks.forEach(text => {
					text.style.display = 'none';
					text.setAttribute('hidden', true);
				});
				// Hide all images
				imageBlocks.forEach(img => {
					img.style.display = 'none';
					img.setAttribute('hidden', true);
				});

				// Show the matched text block
				const activeText = document.getElementById(tabId);
				if (activeText) {
					activeText.style.display = 'block';
					activeText.removeAttribute('hidden');
				}

				// Show the matched image (assuming the ID is "img-" + tabIdâ€™s suffix)
				const imageId = 'img-' + tabId.split('tab-')[1];
				const activeImage = document.getElementById(imageId);
				if (activeImage) {
					activeImage.style.display = 'block';
					activeImage.removeAttribute('hidden');
				}
			}

			// Click handler for each tab button
			tabButtons.forEach(button => {
				button.addEventListener('click', () => {
					// Remove active from all buttons
					tabButtons.forEach(btn => btn.classList.remove('active'));
					// Add active to clicked button
					button.classList.add('active');

					// Show corresponding tab content
					const targetTab = button.getAttribute('data-tab');
					showTab(targetTab);
				});
			});

			// Optionally, activate the first tab by default
			if (tabButtons.length > 0) {
				tabButtons[0].classList.add('active');
				showTab(tabButtons[0].getAttribute('data-tab'));
			}
		});
	</script>
</section>

{% schema %}
{
	"name": "Ingredients Tabs Section",
	"settings": [],
	"blocks": [
		{
			"type": "ingredient",
			"name": "Ingredient",
			"settings": [
				{
					"type": "text",
					"id": "ingredient_title",
					"label": "Ingredient Title"
				},
				{
					"type": "richtext",
					"id": "ingredient_description",
					"label": "Ingredient Description"
				},
				{
					"type": "image_picker",
					"id": "ingredient_image",
					"label": "Ingredient Image"
				}
			]
		}
	],
	"presets": [
		{
			"name": "Ingredients Tabs Section"
		}
	]
}
{% endschema %}
