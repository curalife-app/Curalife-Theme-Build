{% assign buttonURL = page.metafields.custom.next_page_link | default: section.settings.button_link %}

<!-- Sticky Button -->
{% if section.settings.is_sticky %}
  <div class="sticky-wrapper">
    <a id="sticky-bar" href="{{ buttonURL }}" class="sticky-container">
      <button class="sticky-button" name="{{ section.settings.button_element_name }}">{{ section.settings.button_text }}</button>
    </a>
  </div>
{% else %}
  <section id="button-section-{{ section.id }}" class="button-section {{ section.settings.section_additional_classes }} {% if section.settings.is_sticky %}hidden mbl:w-full{% endif %}">
    <div class="container flex justify-center">
      {% render 'button',
        button_text: section.settings.button_text,
        button_url: buttonURL,
        button_url_global: buttonURL,
        button_icon: "",
        button_style: "",
        button_text_color: section.settings.button_title_color,
        button_bg_color: section.settings.button_bg_color,
        button_is_new_tab: section.settings.button_is_new_tab,
        button_is_link_to_top: false,
        button_is_chatbot: false,
        button_is_prerender_link: false,
        button_under_title: section.settings.button_under_title,
        button_under_title_color: section.settings.button_under_title_color,
        button_under_title_classes: section.settings.button_under_title_classes,
        button_element_name: section.settings.button_element_name,
        button_id: section.id
      %}
    </div>
  </section>
{% endif %}

{% if section.settings.is_pass_url_parameters %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var baseLink = document.getElementById('button-link').href;
      var params = new URLSearchParams(window.location.search);
      document.getElementById('button-link').href = baseLink + '?' + params.toString();
    });
  </script>
{% endif %}

<!-- JavaScript for Sticky Button Behavior -->
{% if section.settings.is_sticky %}
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      var stickyBar = document.getElementById("sticky-bar");
      var stickyHideSetting = "{{ section.settings.sticky_hide | default: '' | strip }}";
      var hideOnElements = stickyHideSetting.split(',').map(function(s) { return s.trim(); }).filter(function(s) { return s !== ''; });

      function checkStickyVisibility() {
        var shouldHide = false;

        if (hideOnElements.length > 0) {
          hideOnElements.forEach(function(selector) {
            if (selector) {
              var elements = document.querySelectorAll(selector);
              elements.forEach(function(element) {
                var rect = element.getBoundingClientRect();
                if (rect.top < window.innerHeight && rect.bottom > 0) {
                  shouldHide = true;
                }
              });
            }
          });
        }

        if (shouldHide) {
          stickyBar.classList.remove("visible");
        } else {
          stickyBar.classList.add("visible");
        }
      }

      window.addEventListener("scroll", checkStickyVisibility);
      window.addEventListener("resize", checkStickyVisibility);
      checkStickyVisibility();
    });
  </script>
{% endif %}

<!-- CSS Styles -->
<style>
  {% if section.settings.is_sticky %}
    /* Hide the original button section when sticky button is active */
    #button-section-{{ section.id }}.hidden {
      display: none;
    }

    /* Sticky Button Wrapper */
    .sticky-wrapper {
      position: fixed;
      bottom: 10px;
      left: 50%;
      z-index: 50;
      width: 300px;
      max-width: 300px;
      pointer-events: none;
    }

    /* Sticky Button Container */
    .sticky-container {
      display: block;
      width: 100%;
      transform: translateX(-50%) translateY(100%);
      opacity: 0;
      transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
      pointer-events: auto;
    }

    @media screen and (max-width: 768px) {
      .sticky-wrapper {
        width: 94%;
        bottom: 3vw;

        &::after {
          content: " ";
          width: 100vw;
          height: 25vw;
          display: inline-block;
          background: linear-gradient(0deg, rgb(255 255 255) 40%, rgb(255 255 255 / 0%) 90%);
          position: absolute;
          left: -3vw;
          bottom: -6vw;
          z-index: -1;
        }
      }
    }

    #sticky-bar.visible .sticky-container {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }

    .sticky-button {
      width: 100%;
      padding: 0.75rem 1rem;
      background-color: {{ section.settings.button_bg_color }};
      color: {{ section.settings.button_title_color }};
      font-weight: bold;
      font-size: 1.5rem;
      box-shadow: 0 4px 6px rgba(0,0,0,0.3);
      border-radius: 0.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      border: none;
      cursor: pointer;
    }

    /* Animation */
    @keyframes popIn {
      0% {
        opacity: 0;
        transform: translateY(100%) scale(0.9);
      }
      80% {
        opacity: 1;
        transform: translateY(-10%) scale(1.05);
      }
      100% {
        transform: translateY(0) scale(1);
      }
    }

    #sticky-bar.visible .sticky-container {
      animation: popIn 0.5s both;
    }
  {% endif %}

  /* Existing padding styles */
  {% if section.settings.padding_top != 50 and section.settings.padding_top != blank %}
    #button-section-{{ section.id }} {
      padding-top: {{ section.settings.padding_top }}px;
    }
  {% endif %}

  {% if section.settings.padding_bottom != 50 and section.settings.padding_top != blank %}
    #button-section-{{ section.id }} {
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  {% endif %}

  {% if section.settings.padding_top_mobile != blank %}
    @media screen and (max-width: 768px) {
      #button-section-{{ section.id }} {
        padding-top: {{ section.settings.padding_top_mobile }}vw;
      }
    }
  {% endif %}

  {% if section.settings.padding_bottom_mobile != blank %}
    @media screen and (max-width: 768px) {
      #button-section-{{ section.id }} {
        padding-bottom: {{ section.settings.padding_bottom_mobile }}vw;
      }
    }
  {% endif %}
</style>