{"version":3,"file":"quiz-core.js","sources":["../../src/js/components/quiz-core.js"],"sourcesContent":["/**\r\n * Core Quiz Functionality\r\n * Handles basic quiz operations, navigation, and question rendering\r\n */\r\n\r\nconst ELEMENT_SELECTORS = {\r\n\tMAIN_CONTAINER: \"#quiz-container\",\r\n\tQUESTIONS: \".quiz-questions\",\r\n\tRESULTS: \".quiz-results\",\r\n\tERROR: \".quiz-error\",\r\n\tLOADING: \".quiz-loading\",\r\n\tSTATUS_CHECK: \".quiz-status-check\",\r\n\tPROGRESS_BAR: \".quiz-progress-bar\",\r\n\tQUESTION_CONTAINER: \".quiz-question-container\",\r\n\tNAVIGATION_BUTTONS: \".quiz-navigation\",\r\n\tNEXT_BUTTON: \"#quiz-next-button\"\r\n};\r\n\r\nexport class QuizCore {\r\n\tconstructor(container, config = {}) {\r\n\t\tthis.container = container;\r\n\t\tthis.config = config;\r\n\r\n\t\t// Initialize DOM elements\r\n\t\tthis._initializeDOMElements();\r\n\t\tif (!this._isInitialized) return;\r\n\r\n\t\t// State\r\n\t\tthis.quizData = null;\r\n\t\tthis.currentStepIndex = 0;\r\n\t\tthis.currentQuestionIndex = 0;\r\n\t\tthis.responses = [];\r\n\t\tthis.submitting = false;\r\n\t\tthis.loadingInterval = null;\r\n\r\n\t\t// Test mode\r\n\t\tthis.isTestMode = this.container.hasAttribute(\"data-test-mode\");\r\n\t}\r\n\r\n\t_initializeDOMElements() {\r\n\t\tthis._isInitialized = false;\r\n\r\n\t\tif (!this.container) {\r\n\t\t\tconsole.error(\"Quiz container not found\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initialize all selectors as properties\r\n\t\tObject.entries(ELEMENT_SELECTORS).forEach(([key, selector]) => {\r\n\t\t\tconst propertyName = this._selectorToProperty(key);\r\n\t\t\tthis[propertyName] = this.container.querySelector(selector);\r\n\t\t});\r\n\r\n\t\tthis._isInitialized = true;\r\n\t}\r\n\r\n\t_selectorToProperty(selectorKey) {\r\n\t\treturn selectorKey.toLowerCase().replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\r\n\t}\r\n\r\n\t_validateEssentialElements() {\r\n\t\tconst essential = [\"mainContainer\", \"questions\", \"results\", \"error\", \"loading\"];\r\n\t\tconst missing = essential.filter(prop => !this[prop]);\r\n\r\n\t\tif (missing.length > 0) {\r\n\t\t\tthis._displayCriticalError(\"Missing essential elements: \" + missing.join(\", \"));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t_displayCriticalError(message) {\r\n\t\tconsole.error(\"Critical Quiz Error:\", message);\r\n\t\tif (this.error) {\r\n\t\t\tthis.error.innerHTML = '<div class=\"quiz-error-message\">' + message + \"</div>\";\r\n\t\t\tthis.error.style.display = \"block\";\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadQuizData() {\r\n\t\ttry {\r\n\t\t\tconst quizDataUrl = this.container.getAttribute(\"data-quiz-data-url\");\r\n\t\t\tif (!quizDataUrl) {\r\n\t\t\t\tthrow new Error(\"Quiz data URL not found\");\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await fetch(quizDataUrl);\r\n\t\t\tthis.quizData = await response.json();\r\n\t\t\tthis._initializeResponses();\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Failed to load quiz data:\", error);\r\n\t\t\tthis._displayCriticalError(\"Failed to load quiz data\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t_initializeResponses() {\r\n\t\tthis.responses = this.quizData.steps.map(() => ({}));\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\treturn this.quizData && this.quizData.steps && this.quizData.steps[this.currentStepIndex] ? this.quizData.steps[this.currentStepIndex] : null;\r\n\t}\r\n\r\n\tgetCurrentQuestion() {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\treturn step && step.questions && step.questions[this.currentQuestionIndex] ? step.questions[this.currentQuestionIndex] : null;\r\n\t}\r\n\r\n\tgetResponseForCurrentQuestion() {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tif (!step) return undefined;\r\n\r\n\t\tconst question = this.getCurrentQuestion();\r\n\t\tif (!question) return this.responses[this.currentStepIndex];\r\n\r\n\t\treturn this.responses[this.currentStepIndex][question.id];\r\n\t}\r\n\r\n\tisFormStep(stepId) {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\treturn step && step.type === \"form\";\r\n\t}\r\n\r\n\trenderCurrentStep() {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tif (!step) {\r\n\t\t\tthis._displayCriticalError(\"No step to render\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._updateProgressBar();\r\n\r\n\t\tif (step.type === \"form\") {\r\n\t\t\tthis.questions.innerHTML = this._generateFormStepHTML(step);\r\n\t\t} else {\r\n\t\t\tthis.questions.innerHTML = this._generateWizardStepHTML(step);\r\n\t\t}\r\n\r\n\t\tthis._attachStepEventListeners(step);\r\n\t\tthis.updateNavigation();\r\n\t\tthis._toggleElement(this.questions, true);\r\n\t}\r\n\r\n\t_updateProgressBar() {\r\n\t\tif (!this.progressBar) return;\r\n\r\n\t\tconst totalSteps = this.quizData.steps.length;\r\n\t\tconst progress = ((this.currentStepIndex + 1) / totalSteps) * 100;\r\n\r\n\t\tthis.progressBar.style.width = Math.min(progress, 100) + \"%\";\r\n\t\tthis.progressBar.setAttribute(\"aria-valuenow\", Math.min(progress, 100));\r\n\r\n\t\tconst progressText = this.container.querySelector(\".quiz-progress-text\");\r\n\t\tif (progressText) {\r\n\t\t\tprogressText.textContent = \"Step \" + (this.currentStepIndex + 1) + \" of \" + totalSteps;\r\n\t\t}\r\n\t}\r\n\r\n\t_generateFormStepHTML(step) {\r\n\t\tconst stepInfo = this._generateStepInfoHTML(step);\r\n\t\tconst questions = step.questions\r\n\t\t\t.map(question => {\r\n\t\t\t\treturn this._renderQuestionByType(question, this.responses[this.currentStepIndex][question.id]);\r\n\t\t\t})\r\n\t\t\t.join(\"\");\r\n\r\n\t\treturn ['<div class=\"quiz-form-step\">', stepInfo, '<form class=\"quiz-form\">', questions, \"</form>\", \"</div>\"].join(\"\");\r\n\t}\r\n\r\n\t_generateWizardStepHTML(step) {\r\n\t\tconst question = this.getCurrentQuestion();\r\n\t\tconst response = this.getResponseForCurrentQuestion();\r\n\t\tconst stepInfo = this._generateStepInfoHTML(step);\r\n\t\tconst questionHTML = this._renderQuestionByType(question, response);\r\n\r\n\t\treturn ['<div class=\"quiz-wizard-step\">', stepInfo, '<div class=\"quiz-question-wrapper\">', questionHTML, \"</div>\", \"</div>\"].join(\"\");\r\n\t}\r\n\r\n\t_generateStepInfoHTML(step) {\r\n\t\tif (!step.title && !step.description) return \"\";\r\n\r\n\t\tconst title = step.title ? '<h3 class=\"quiz-step-title\">' + step.title + \"</h3>\" : \"\";\r\n\t\tconst description = step.description ? '<p class=\"quiz-step-description\">' + step.description + \"</p>\" : \"\";\r\n\r\n\t\treturn ['<div class=\"quiz-step-info\">', title, description, \"</div>\"].join(\"\");\r\n\t}\r\n\r\n\t_toggleElement(element, show) {\r\n\t\tif (element) element.style.display = show ? \"block\" : \"none\";\r\n\t}\r\n\r\n\t_setNavigationVisibility(visible) {\r\n\t\tif (this.navigationButtons) {\r\n\t\t\tthis.navigationButtons.style.display = visible ? \"flex\" : \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\t_renderQuestionByType(question, response) {\r\n\t\tif (!question) return \"\";\r\n\r\n\t\tswitch (question.type) {\r\n\t\t\tcase \"multiple-choice\":\r\n\t\t\t\treturn this.renderMultipleChoice(question, response);\r\n\t\t\tcase \"checkbox\":\r\n\t\t\t\treturn this.renderCheckbox(question, response);\r\n\t\t\tcase \"dropdown\":\r\n\t\t\t\treturn this.renderDropdown(question, response);\r\n\t\t\tcase \"text-input\":\r\n\t\t\t\treturn this.renderTextInput(question, response);\r\n\t\t\tcase \"date-part\":\r\n\t\t\t\treturn this.renderDatePart(question, response);\r\n\t\t\tcase \"textarea\":\r\n\t\t\t\treturn this.renderTextarea(question, response);\r\n\t\t\tcase \"rating\":\r\n\t\t\t\treturn this.renderRating(question, response);\r\n\t\t\tcase \"date-input\":\r\n\t\t\t\treturn this.renderDateInput(question, response);\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn(\"Unknown question type:\", question.type);\r\n\t\t\t\treturn '<div class=\"quiz-error\">Unknown question type: ' + question.type + \"</div>\";\r\n\t\t}\r\n\t}\r\n\r\n\trenderMultipleChoice(question, response) {\r\n\t\treturn this._renderCardOptions(question, response, \"radio\");\r\n\t}\r\n\r\n\trenderCheckbox(question, response) {\r\n\t\tif (question.style === \"cards\") {\r\n\t\t\treturn this._renderCardOptions(question, response, \"checkbox\");\r\n\t\t}\r\n\t\treturn this._renderSimpleCheckboxes(question, Array.isArray(response) ? response : []);\r\n\t}\r\n\r\n\t_renderCardOptions(question, response, inputType) {\r\n\t\tconst selectedValues = inputType === \"checkbox\" ? (Array.isArray(response) ? response : []) : [response];\r\n\r\n\t\tconst options = question.options\r\n\t\t\t.map((option, index) => {\r\n\t\t\t\tconst isSelected = selectedValues.includes(option.value);\r\n\t\t\t\tconst checked = isSelected ? \"checked\" : \"\";\r\n\t\t\t\tconst selectedClass = isSelected ? \"selected\" : \"\";\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t'<label class=\"quiz-option-card ' + selectedClass + '\" data-option-value=\"' + option.value + '\">',\r\n\t\t\t\t\t'<input type=\"' + inputType + '\" name=\"' + question.id + '\" value=\"' + option.value + '\" ' + checked + ' style=\"display: none;\">',\r\n\t\t\t\t\t'<div class=\"quiz-option-content\">',\r\n\t\t\t\t\t'<span class=\"quiz-option-text\">' + option.label + \"</span>\",\r\n\t\t\t\t\t'<span class=\"quiz-option-checkmark\">' + this._getCheckmarkSVG() + \"</span>\",\r\n\t\t\t\t\t\"</div>\",\r\n\t\t\t\t\t\"</label>\"\r\n\t\t\t\t].join(\"\");\r\n\t\t\t})\r\n\t\t\t.join(\"\");\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<div class=\"quiz-options quiz-options-cards\">',\r\n\t\t\toptions,\r\n\t\t\t\"</div>\",\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\t_renderSimpleCheckboxes(question, selectedOptions) {\r\n\t\tconst options = question.options\r\n\t\t\t.map(option => {\r\n\t\t\t\tconst checked = selectedOptions.includes(option.value) ? \"checked\" : \"\";\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t'<label class=\"quiz-option-simple\">',\r\n\t\t\t\t\t'<input type=\"checkbox\" name=\"' + question.id + '\" value=\"' + option.value + '\" ' + checked + \">\",\r\n\t\t\t\t\t'<span class=\"quiz-option-label\">' + option.label + \"</span>\",\r\n\t\t\t\t\t\"</label>\"\r\n\t\t\t\t].join(\"\");\r\n\t\t\t})\r\n\t\t\t.join(\"\");\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<div class=\"quiz-options quiz-options-simple\">',\r\n\t\t\toptions,\r\n\t\t\t\"</div>\",\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\trenderDropdown(question, response) {\r\n\t\tconst placeholder = question.placeholder || \"Select an option\";\r\n\t\tconst selectedAttr = !response ? \"selected\" : \"\";\r\n\r\n\t\tconst options = question.options\r\n\t\t\t.map(option => {\r\n\t\t\t\tconst selected = response === option.value ? \"selected\" : \"\";\r\n\t\t\t\treturn '<option value=\"' + option.value + '\" ' + selected + \">\" + option.label + \"</option>\";\r\n\t\t\t})\r\n\t\t\t.join(\"\");\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<select class=\"quiz-dropdown\" name=\"' + question.id + '\">',\r\n\t\t\t'<option value=\"\" disabled ' + selectedAttr + \">\" + placeholder + \"</option>\",\r\n\t\t\toptions,\r\n\t\t\t\"</select>\",\r\n\t\t\t'<div class=\"quiz-field-error\" id=\"error-' + question.id + '\"></div>',\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\trenderTextInput(question, response) {\r\n\t\tconst value = response || \"\";\r\n\t\tconst placeholder = question.placeholder || \"\";\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<input type=\"text\" class=\"quiz-text-input\" name=\"' + question.id + '\" value=\"' + value + '\" placeholder=\"' + placeholder + '\">',\r\n\t\t\t'<div class=\"quiz-field-error\" id=\"error-' + question.id + '\"></div>',\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\trenderTextarea(question, response) {\r\n\t\tconst value = response || \"\";\r\n\t\tconst placeholder = question.placeholder || \"\";\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<textarea class=\"quiz-textarea\" name=\"' + question.id + '\" placeholder=\"' + placeholder + '\">' + value + \"</textarea>\",\r\n\t\t\t'<div class=\"quiz-field-error\" id=\"error-' + question.id + '\"></div>',\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\trenderRating(question, response) {\r\n\t\tconst max = question.max || 10;\r\n\t\tconst options = [];\r\n\r\n\t\tfor (let i = 1; i <= max; i++) {\r\n\t\t\tconst selected = response == i ? \"selected\" : \"\";\r\n\t\t\tconst checked = response == i ? \"checked\" : \"\";\r\n\r\n\t\t\toptions.push(\r\n\t\t\t\t[\r\n\t\t\t\t\t'<label class=\"quiz-rating-option ' + selected + '\">',\r\n\t\t\t\t\t'<input type=\"radio\" name=\"' + question.id + '\" value=\"' + i + '\" ' + checked + \">\",\r\n\t\t\t\t\t'<span class=\"quiz-rating-number\">' + i + \"</span>\",\r\n\t\t\t\t\t\"</label>\"\r\n\t\t\t\t].join(\"\")\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<div class=\"quiz-rating-options\">',\r\n\t\t\toptions.join(\"\"),\r\n\t\t\t\"</div>\",\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\trenderDateInput(question, response) {\r\n\t\tconst value = response || \"\";\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<input type=\"date\" class=\"quiz-date-input\" name=\"' + question.id + '\" value=\"' + value + '\">',\r\n\t\t\t'<div class=\"quiz-field-error\" id=\"error-' + question.id + '\"></div>',\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\trenderDatePart(question, response) {\r\n\t\tconst parts = [\"month\", \"day\", \"year\"];\r\n\r\n\t\tconst partsHTML = parts\r\n\t\t\t.map(part => {\r\n\t\t\t\tconst value = response && response[part] ? response[part] : \"\";\r\n\t\t\t\tconst selectedAttr = !value ? \"selected\" : \"\";\r\n\t\t\t\tconst partTitle = part.charAt(0).toUpperCase() + part.slice(1);\r\n\r\n\t\t\t\tconst options = this._getDatePartOptions(part)\r\n\t\t\t\t\t.map(option => {\r\n\t\t\t\t\t\tconst selected = value == option.value ? \"selected\" : \"\";\r\n\t\t\t\t\t\treturn '<option value=\"' + option.value + '\" ' + selected + \">\" + option.label + \"</option>\";\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.join(\"\");\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t'<select class=\"quiz-date-part\" name=\"' + question.id + \"_\" + part + '\" data-date-part=\"' + part + '\">',\r\n\t\t\t\t\t'<option value=\"\" disabled ' + selectedAttr + \">\" + partTitle + \"</option>\",\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\t\"</select>\"\r\n\t\t\t\t].join(\"\");\r\n\t\t\t})\r\n\t\t\t.join(\"\");\r\n\r\n\t\treturn [\r\n\t\t\t'<div class=\"quiz-question\" data-question-id=\"' + question.id + '\" data-question-type=\"' + question.type + '\">',\r\n\t\t\t'<h4 class=\"quiz-question-title\">' + question.text + \"</h4>\",\r\n\t\t\t'<div class=\"quiz-date-parts\">',\r\n\t\t\tpartsHTML,\r\n\t\t\t\"</div>\",\r\n\t\t\t'<div class=\"quiz-field-error\" id=\"error-' + question.id + '\"></div>',\r\n\t\t\t\"</div>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\t_getDatePartOptions(part) {\r\n\t\tconst currentYear = new Date().getFullYear();\r\n\r\n\t\tswitch (part) {\r\n\t\t\tcase \"month\":\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{ value: \"01\", label: \"January\" },\r\n\t\t\t\t\t{ value: \"02\", label: \"February\" },\r\n\t\t\t\t\t{ value: \"03\", label: \"March\" },\r\n\t\t\t\t\t{ value: \"04\", label: \"April\" },\r\n\t\t\t\t\t{ value: \"05\", label: \"May\" },\r\n\t\t\t\t\t{ value: \"06\", label: \"June\" },\r\n\t\t\t\t\t{ value: \"07\", label: \"July\" },\r\n\t\t\t\t\t{ value: \"08\", label: \"August\" },\r\n\t\t\t\t\t{ value: \"09\", label: \"September\" },\r\n\t\t\t\t\t{ value: \"10\", label: \"October\" },\r\n\t\t\t\t\t{ value: \"11\", label: \"November\" },\r\n\t\t\t\t\t{ value: \"12\", label: \"December\" }\r\n\t\t\t\t];\r\n\t\t\tcase \"day\":\r\n\t\t\t\tconst days = [];\r\n\t\t\t\tfor (let i = 1; i <= 31; i++) {\r\n\t\t\t\t\tconst day = i.toString().padStart(2, \"0\");\r\n\t\t\t\t\tdays.push({ value: day, label: i.toString() });\r\n\t\t\t\t}\r\n\t\t\t\treturn days;\r\n\t\t\tcase \"year\":\r\n\t\t\t\tconst years = [];\r\n\t\t\t\tfor (let i = 0; i < 100; i++) {\r\n\t\t\t\t\tconst year = currentYear - i;\r\n\t\t\t\t\tyears.push({ value: year.toString(), label: year.toString() });\r\n\t\t\t\t}\r\n\t\t\t\treturn years;\r\n\t\t\tdefault:\r\n\t\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t_getCheckmarkSVG() {\r\n\t\treturn [\r\n\t\t\t'<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">',\r\n\t\t\t'<path d=\"M16.6667 5L7.50004 14.1667L3.33337 10\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>',\r\n\t\t\t\"</svg>\"\r\n\t\t].join(\"\");\r\n\t}\r\n\r\n\tgoToPreviousStep() {\r\n\t\tif (this.currentStepIndex > 0) {\r\n\t\t\tthis.currentStepIndex--;\r\n\t\t\tthis.currentQuestionIndex = 0;\r\n\t\t\tthis.renderCurrentStep();\r\n\t\t}\r\n\t}\r\n\r\n\tgoToNextStep() {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tif (!step) return;\r\n\r\n\t\tif (step.type === \"form\") {\r\n\t\t\t// Handle form steps - all questions at once\r\n\t\t\tif (this.currentStepIndex < this.quizData.steps.length - 1) {\r\n\t\t\t\tthis.currentStepIndex++;\r\n\t\t\t\tthis.currentQuestionIndex = 0;\r\n\t\t\t\tthis.renderCurrentStep();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Handle wizard steps - one question at a time\r\n\t\t\tif (this.currentQuestionIndex < step.questions.length - 1) {\r\n\t\t\t\tthis.currentQuestionIndex++;\r\n\t\t\t\tthis.renderCurrentStep();\r\n\t\t\t} else if (this.currentStepIndex < this.quizData.steps.length - 1) {\r\n\t\t\t\tthis.currentStepIndex++;\r\n\t\t\t\tthis.currentQuestionIndex = 0;\r\n\t\t\t\tthis.renderCurrentStep();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateNavigation() {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tif (!step) return;\r\n\r\n\t\t// Update next button text and behavior\r\n\t\tconst nextButton = this.nextButton;\r\n\t\tif (!nextButton) return;\r\n\r\n\t\tconst isLastStep = this.currentStepIndex === this.quizData.steps.length - 1;\r\n\t\tconst isLastQuestion = step.type !== \"form\" && this.currentQuestionIndex === step.questions.length - 1;\r\n\r\n\t\tif (isLastStep && (step.type === \"form\" || isLastQuestion)) {\r\n\t\t\tnextButton.textContent = this._getStepButtonText(step);\r\n\t\t\tnextButton.disabled = !this._hasValidAnswer(step);\r\n\t\t} else {\r\n\t\t\tnextButton.textContent = \"Next\";\r\n\t\t\tnextButton.disabled = !this._hasValidAnswer(step);\r\n\t\t}\r\n\r\n\t\t// Show/hide back button\r\n\t\tconst backButton = this.container.querySelector(\"#quiz-back-button\");\r\n\t\tif (backButton) {\r\n\t\t\tbackButton.style.display = this.currentStepIndex === 0 && this.currentQuestionIndex === 0 ? \"none\" : \"inline-block\";\r\n\t\t}\r\n\t}\r\n\r\n\t_getStepButtonText(step) {\r\n\t\tif (step.buttonText) return step.buttonText;\r\n\r\n\t\tconst buttonTextMap = {\r\n\t\t\tsubmit: \"Submit Application\",\r\n\t\t\tfinish: \"Get My Results\",\r\n\t\t\tschedule: \"Schedule Appointment\",\r\n\t\t\tcomplete: \"Complete Quiz\"\r\n\t\t};\r\n\r\n\t\treturn buttonTextMap[step.action] || \"Continue\";\r\n\t}\r\n\r\n\t_hasValidAnswer(step) {\r\n\t\tif (step.type === \"form\") {\r\n\t\t\treturn step.questions.every(question => {\r\n\t\t\t\tconst response = this.responses[this.currentStepIndex][question.id];\r\n\t\t\t\treturn !this._isEmptyValue(response, question.type);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst question = this.getCurrentQuestion();\r\n\t\t\tif (!question) return true;\r\n\r\n\t\t\tconst response = this.getResponseForCurrentQuestion();\r\n\t\t\treturn !this._isEmptyValue(response, question.type);\r\n\t\t}\r\n\t}\r\n\r\n\t_isEmptyValue(value, questionType) {\r\n\t\tif (questionType === \"checkbox\") {\r\n\t\t\treturn !Array.isArray(value) || value.length === 0;\r\n\t\t}\r\n\t\treturn value === undefined || value === null || value === \"\";\r\n\t}\r\n\r\n\thandleAnswer(answer) {\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tconst question = this.getCurrentQuestion();\r\n\r\n\t\tif (!step || !question) return;\r\n\r\n\t\tthis._updateResponse(question.id, answer, step.id);\r\n\r\n\t\tif (this._shouldAutoAdvance(question)) {\r\n\t\t\tthis._handleAutoAdvance(answer);\r\n\t\t}\r\n\r\n\t\tthis.updateNavigation();\r\n\t}\r\n\r\n\t_updateResponse(questionId, answer, stepId) {\r\n\t\tthis.responses[this.currentStepIndex][questionId] = answer;\r\n\r\n\t\t// Dispatch event for external listeners\r\n\t\tthis.container.dispatchEvent(\r\n\t\t\tnew CustomEvent(\"quizAnswer\", {\r\n\t\t\t\tdetail: { questionId: questionId, answer: answer, stepId: stepId }\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t_shouldAutoAdvance(question) {\r\n\t\treturn question.autoAdvance === true && question.type === \"multiple-choice\";\r\n\t}\r\n\r\n\t_handleAutoAdvance(answer) {\r\n\t\tconst self = this;\r\n\t\tsetTimeout(function () {\r\n\t\t\tself.goToNextStep();\r\n\t\t}, 300);\r\n\t}\r\n\r\n\t_attachStepEventListeners(step) {\r\n\t\tif (step.type === \"form\") {\r\n\t\t\tconst self = this;\r\n\t\t\tstep.questions.forEach(function (question) {\r\n\t\t\t\tself._attachFormQuestionListener(question);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst question = this.getCurrentQuestion();\r\n\t\t\tif (question) {\r\n\t\t\t\tthis._attachQuestionEventListeners(question);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t_attachQuestionEventListeners(question) {\r\n\t\tconst questionElement = this.container.querySelector('[data-question-id=\"' + question.id + '\"]');\r\n\t\tif (!questionElement) return;\r\n\r\n\t\tthis._removeExistingHandlers(questionElement, [\"change\", \"input\", \"click\"]);\r\n\r\n\t\tswitch (question.type) {\r\n\t\t\tcase \"checkbox\":\r\n\t\t\t\tthis._attachCheckboxListeners(question);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"dropdown\":\r\n\t\t\t\tthis._attachDropdownListeners(question);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"text-input\":\r\n\t\t\tcase \"textarea\":\r\n\t\t\tcase \"date-input\":\r\n\t\t\t\tthis._attachTextInputListeners(question);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"multiple-choice\":\r\n\t\t\tcase \"rating\":\r\n\t\t\t\tthis._attachInputGroupListeners(question, \"change\", () => {\r\n\t\t\t\t\tconst selectedInput = questionElement.querySelector('input[type=\"radio\"]:checked');\r\n\t\t\t\t\tif (selectedInput) {\r\n\t\t\t\t\t\tthis.handleAnswer(selectedInput.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"date-part\":\r\n\t\t\t\tconst self = this;\r\n\t\t\t\tquestionElement.querySelectorAll(\"select\").forEach(function (select) {\r\n\t\t\t\t\tselect.addEventListener(\"change\", function () {\r\n\t\t\t\t\t\tconst parts = {};\r\n\t\t\t\t\t\tquestionElement.querySelectorAll(\"select\").forEach(function (partSelect) {\r\n\t\t\t\t\t\t\tconst part = partSelect.getAttribute(\"data-date-part\");\r\n\t\t\t\t\t\t\tif (partSelect.value) {\r\n\t\t\t\t\t\t\t\tparts[part] = partSelect.value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.handleAnswer(parts);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t_attachCheckboxListeners(question) {\r\n\t\tconst questionElement = this.container.querySelector('[data-question-id=\"' + question.id + '\"]');\r\n\t\tconst checkboxInputs = questionElement.querySelectorAll('input[type=\"checkbox\"]');\r\n\t\tconst self = this;\r\n\r\n\t\tconst getSelectedValues = function () {\r\n\t\t\treturn Array.from(checkboxInputs)\r\n\t\t\t\t.filter(function (input) {\r\n\t\t\t\t\treturn input.checked;\r\n\t\t\t\t})\r\n\t\t\t\t.map(function (input) {\r\n\t\t\t\t\treturn input.value;\r\n\t\t\t\t});\r\n\t\t};\r\n\r\n\t\tcheckboxInputs.forEach(function (input) {\r\n\t\t\tinput.addEventListener(\"change\", function () {\r\n\t\t\t\tconst selectedValues = getSelectedValues();\r\n\t\t\t\tself.handleAnswer(selectedValues);\r\n\t\t\t\tself._updateCheckboxVisualState(question, selectedValues);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t_updateCheckboxVisualState(question, selectedValues) {\r\n\t\tconst questionElement = this.container.querySelector('[data-question-id=\"' + question.id + '\"]');\r\n\t\tif (!questionElement) return;\r\n\r\n\t\tquestionElement.querySelectorAll(\".quiz-option-card\").forEach(function (card) {\r\n\t\t\tconst optionValue = card.getAttribute(\"data-option-value\");\r\n\t\t\tconst isSelected = selectedValues.includes(optionValue);\r\n\r\n\t\t\tif (isSelected) {\r\n\t\t\t\tcard.classList.add(\"selected\");\r\n\t\t\t} else {\r\n\t\t\t\tcard.classList.remove(\"selected\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_attachDropdownListeners(question) {\r\n\t\tconst dropdown = this.container.querySelector('[data-question-id=\"' + question.id + '\"] select');\r\n\t\tconst self = this;\r\n\t\tif (dropdown) {\r\n\t\t\tdropdown.addEventListener(\"change\", function () {\r\n\t\t\t\tself.handleAnswer(dropdown.value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_attachTextInputListeners(question) {\r\n\t\tconst input = this.container.querySelector('[data-question-id=\"' + question.id + '\"] input, [data-question-id=\"' + question.id + '\"] textarea');\r\n\t\tconst self = this;\r\n\t\tif (input) {\r\n\t\t\tinput.addEventListener(\"input\", function () {\r\n\t\t\t\tself.handleAnswer(input.value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t_attachInputGroupListeners(question, eventType, callback) {\r\n\t\tconst inputs = this.container.querySelectorAll('[data-question-id=\"' + question.id + '\"] input');\r\n\t\tinputs.forEach(function (input) {\r\n\t\t\tinput.addEventListener(eventType, callback);\r\n\t\t});\r\n\t}\r\n\r\n\t_removeExistingHandlers(element, events) {\r\n\t\t// Note: This is a simplified version - in practice, you'd want to track handlers for proper removal\r\n\t\tconst self = this;\r\n\t\tevents.forEach(function (event) {\r\n\t\t\telement.removeEventListener(event, function () {});\r\n\t\t});\r\n\t}\r\n\r\n\t_attachFormQuestionListener(question) {\r\n\t\tconst questionElement = this.container.querySelector('[data-question-id=\"' + question.id + '\"]');\r\n\t\tif (!questionElement) return;\r\n\r\n\t\tconst self = this;\r\n\r\n\t\tswitch (question.type) {\r\n\t\t\tcase \"checkbox\":\r\n\t\t\t\tthis._attachFormCheckboxListeners(question);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconst input = questionElement.querySelector(\"input, select, textarea\");\r\n\t\t\t\tif (input) {\r\n\t\t\t\t\tinput.addEventListener(\"input\", function () {\r\n\t\t\t\t\t\tself.handleFormAnswer(question.id, input.value);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tinput.addEventListener(\"change\", function () {\r\n\t\t\t\t\t\tself.handleFormAnswer(question.id, input.value);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t_attachFormCheckboxListeners(question) {\r\n\t\tconst questionElement = this.container.querySelector('[data-question-id=\"' + question.id + '\"]');\r\n\t\tconst checkboxes = questionElement.querySelectorAll('input[type=\"checkbox\"]');\r\n\t\tconst self = this;\r\n\r\n\t\tcheckboxes.forEach(function (checkbox) {\r\n\t\t\tcheckbox.addEventListener(\"change\", function () {\r\n\t\t\t\tconst selectedValues = Array.from(checkboxes)\r\n\t\t\t\t\t.filter(function (cb) {\r\n\t\t\t\t\t\treturn cb.checked;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(function (cb) {\r\n\t\t\t\t\t\treturn cb.value;\r\n\t\t\t\t\t});\r\n\t\t\t\tself.handleFormAnswer(question.id, selectedValues);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\thandleFormAnswer(questionId, answer) {\r\n\t\tthis._updateResponse(questionId, answer);\r\n\t\tthis.updateNavigation();\r\n\t}\r\n\r\n\t// Event binding for navigation\r\n\tattachNavigationListeners() {\r\n\t\tconst backButton = this.container.querySelector(\"#quiz-back-button\");\r\n\t\tconst nextButton = this.nextButton;\r\n\t\tconst self = this;\r\n\r\n\t\tif (backButton) {\r\n\t\t\tbackButton.addEventListener(\"click\", function () {\r\n\t\t\t\tself.goToPreviousStep();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (nextButton) {\r\n\t\t\tnextButton.addEventListener(\"click\", function () {\r\n\t\t\t\tconst step = self.getCurrentStep();\r\n\t\t\t\tconst isLastStep = self.currentStepIndex === self.quizData.steps.length - 1;\r\n\t\t\t\tconst isLastQuestion = step.type !== \"form\" && self.currentQuestionIndex === step.questions.length - 1;\r\n\r\n\t\t\t\tif (isLastStep && (step.type === \"form\" || isLastQuestion)) {\r\n\t\t\t\t\t// This is where we'd trigger the finish process\r\n\t\t\t\t\tself.container.dispatchEvent(\r\n\t\t\t\t\t\tnew CustomEvent(\"quizComplete\", {\r\n\t\t\t\t\t\t\tdetail: { responses: self.responses }\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.goToNextStep();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n"],"names":[],"mappings":"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"}