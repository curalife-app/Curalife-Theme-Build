{% if customer.email contains 'yotam' %}
{% comment %}Debug logs will be wrapped in HTML comments{% endcomment %}

<!-- DEBUG: Component Start -->
<!-- Input Parameters:
  image_src: {{ image_src }}
  mobile_image_src: {{ mobile_image_src | default: 'not provided' }}
  sizes: {{ sizes | default: 'default' }}
  breakpoint: {{ breakpoint | default: '768' }}
  lazy: {{ lazy | default: 'true' }}
  alt: {{ alt }}
  class: {{ class | default: 'none' }}
  link: {{ link | default: 'none' }}
-->

{%- liquid
assign image_src = image
assign mobile_image_src = mobile_image | default: image

# Function to generate CDN URL with width
assign cdn_url_format = image_src | split: '?' | first
assign cdn_version = image_src | split: '?' | last

# Auto-detect retina images based on filename
assign path_parts = image_src | split: '/'
assign filename = path_parts | last | split: '?' | first
assign image_name = filename | split: '.' | first
assign image_ext = filename | split: '.' | last
assign retina_filename = image_name | append: '-x2.' | append: image_ext
assign retina_src = cdn_url_format | replace: filename, retina_filename | append: '?' | append: cdn_version

echo '<!-- DEBUG: Image URL Processing'
echo '  Original image src: ' | append: image_src
echo '  CDN URL format: ' | append: cdn_url_format
echo '  CDN version: ' | append: cdn_version
echo '-->'

assign lazy_load = lazy | default: true
assign breakpoint = breakpoint | default: 768
assign sizes = sizes | default: '(min-width: 1200px) 1100px, (min-width: 769px) 750px, 100vw'
assign link_url = link

# Define widths for regular and retina displays
assign base_widths = '375,750,1080,1500,2200'
assign base_widths_array = base_widths | split: ','
assign unique_id = 'img-' | append: filename | append: '-' | append: forloop.index

-%}

<div class="relative overflow-hidden">
{%- if link_url -%}
<!-- DEBUG: Adding link wrapper: {{ link_url }} -->
<a href="{{ link_url | escape }}">{%- endif -%}
<picture>
  {%- comment -%} Mobile Source {%- endcomment -%}
  <source
    media="(max-width: {{ breakpoint }}px)"
    srcset="
      {%- for width in base_widths_array -%}
        {{ cdn_url_format }}?{{ cdn_version }}&width={{ width }} {{ width }}w
        {%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}
    "
    sizes="{{ sizes }}"
  >
  <!-- DEBUG: Mobile srcset generated -->

  {%- comment -%} Desktop Source {%- endcomment -%}
  <source
    media="(min-width: {{ breakpoint | plus: 1 }}px)"
    srcset="
      {%- for width in base_widths_array -%}
        {{ cdn_url_format }}?{{ cdn_version }}&width={{ width }} {{ width }}w
        {%- unless forloop.last -%},{%- endunless -%}
      {%- endfor -%}
    "
    sizes="{{ sizes }}"
  >
  <!-- DEBUG: Desktop srcset generated -->

  <img
    id="{{ unique_id }}"
    src="{{ image_src }}"
    {% if lazy_load %}loading="lazy"{% endif %}
    {% if lazy_load %}
      data-src="{{ image_src }}"
      data-srcset="
        {%- for width in base_widths_array -%}
          {{ cdn_url_format }}?{{ cdn_version }}&width={{ width }} {{ width }}w
          {%- unless forloop.last -%},{%- endunless -%}
        {%- endfor -%}
      "
    {% endif %}
    alt="{{ alt | escape }}"
    class="block h-auto w-full opacity-0 transition-opacity duration-300 ease-in-out {% if class %}{{ class }}{% endif %}"
    onload="this.classList.add('opacity-100');"
    data-original-url="{{ image_src }}"
  >
  <!-- DEBUG: Image element generated -->
</picture>
{%- if link_url -%}</a>{%- endif -%}
</div>
<!-- DEBUG: Component End -->
{% else %}
  {% comment %}
    Updated Shopify CDN Responsive Image Component

    Accepts:
    - image: The main image object (required)
    - mobile_image: An optional image object for mobile devices
    - sizes: Custom sizes attribute (optional, default provided)
    - breakpoint: Custom breakpoint in pixels (optional, default: 768)
    - lazy: Enable lazy loading (optional, default: true)
    - alt: Alt text for the image (required for accessibility)
    - class: Additional CSS classes (optional)
    - link: URL to wrap the image in a link (optional)

    Usage:
    {% render 'shopify-cdn-image',
      image: product.featured_image,
      mobile_image: product.images[1],
      sizes: '(min-width: 1200px) 1100px, (min-width: 769px) 750px, 100vw',
      breakpoint: 768,
      lazy: true,
      alt: product.title,
      class: 'my-custom-class',
      link: product.url
    %}
  {% endcomment %}

  {%- liquid
  assign desktop_image = image
  assign mobile_image = mobile_image | default: image
  assign lazy_load = lazy | default: true
  assign breakpoint = breakpoint | default: 768
  assign sizes = sizes | default: '(min-width: 1200px) 1100px, (min-width: 769px) 750px, 100vw'
  assign link_url = link
  assign widths = '375,750,1080,1500,2200,3000'
  assign widths_array = widths | split: ','
  assign unique_id = 'img-' | append: desktop_image.id | append: '-' | append: mobile_image.id
  assign image_extension = desktop_image.src | split: '.' | last | downcase

  # Check if filename contains X2 or x2
  assign filename = desktop_image.src | split: '/' | last
  assign is_x2 = false
  if filename contains 'X2' or filename contains 'x2'
    assign is_x2 = true
  endif

  # Calculate the display width and height
  assign display_width = desktop_image.width
  assign display_height = desktop_image.height
  if is_x2
    assign display_width = display_width | divided_by: 2
    assign display_height = display_height | divided_by: 2
  endif
  -%}

  <div class="responsive-image-wrapper contains">
  {%- if link_url -%}<a href="{{ link_url | escape }}">{%- endif -%}
  <picture>
    <source
      media="(max-width: {{ breakpoint }}px)"
      srcset="
        {%- for width in widths_array -%}
          {{ mobile_image | image_url: width: width }} {{ width }}w,
        {%- endfor -%}
      "
      sizes="{{ sizes }}">
    <source
      media="(min-width: {{ breakpoint | plus: 1 }}px)"
      srcset="
        {%- for width in widths_array -%}
          {{ desktop_image | image_url: width: width }} {{ width }}w,
        {%- endfor -%}
      "
      sizes="{{ sizes }}">

    <img
      id="{{ unique_id }}"
      src="{{ desktop_image | image_url: width: 1100 }}"
      srcset="{{ desktop_image | image_url: width: 2200 }} 2x"
      {% if lazy_load %}loading="lazy"{% endif %}
      {% if lazy_load %}
        data-src="{{ desktop_image | image_url: width: 1100 }}"
        data-srcset="
          {%- for width in widths_array -%}
            {{ desktop_image | image_url: width: width }} {{ width }}w,
          {%- endfor -%}
        "
      {% endif %}
      alt="{{ alt | escape }}"
      width="{{ display_width }}"
      height="{{ display_height }}"
      class="responsive-image relative {% if class %}{{ class }}{% endif %}"
      onload="this.classList.add('loaded');"
      href="{{ link_url }}"
      name="track:Image Link"
    >
  </picture>
  {%- if link_url -%}</a>{%- endif -%}
  </div>
{% endif %}