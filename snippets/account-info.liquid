{% comment %}
  Account Information Snippet

  This snippet displays the customer's contact information and shipping address in the account page.
  It also handles displaying success messages after contact information is updated.
  It now includes password change functionality right in the same card.

  Usage:
  {% render 'account-info' %}

  Dependencies:
  - Requires customer object to be available
  - Expects certain CSS classes to be defined in the parent template
  - Handles the contact-updated URL parameter for success messages
{% endcomment %}

<div class="profile-info-wrapper">
	<div class="contact-info">
		<h6 class="info-subtitle">Contact Details</h6>
		<ul class="no-style">
			<li><p>First Name<span>{{ customer.first_name }}</span></p></li>
			<li><p>Last Name<span>{{ customer.last_name }}</span></p></li>
			<li><p>Email<span>{{ customer.email }}</span></p></li>
		</ul>
	</div>

	<div class="shipping-info">
		<h6 class="info-subtitle">
			Shipping Address
			<a href="/account/addresses" class="address-edit-link" title="Manage Addresses">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path></svg>
			</a>
		</h6>
		{% assign address = customer.default_address %}
		{% if address %}
			<div class="view_address">
				<p>{{ address.first_name }} {{address.last_name }}
				{% if address.company != blank %}<br />{{ address.company }}{% endif %}
				{% if address.street != blank %}<br />{{ address.street }}{% endif %}
				<br />{{ address.city }} {% if address.province_code != blank %}, {{ address.province_code }}{% endif %}
				<br />{{ address.country }} {{ address.zip }}
				{% if address.phone != blank %}<br />{{ address.phone }}</p>{% endif %}
			</div>
		{% else %}
			<div class="empty-text">
				<p>You don't have a shipping address yet. <a href="/account/addresses" class="add-address-link">Add one now</a></p>
			</div>
		{% endif %}
	</div>
</div>

<div class="password-change-section">
  <h6 class="info-subtitle">
    Password Management
    <button type="button" class="toggle-password-form" aria-label="Toggle password change form">
      <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path></svg>
    </button>
  </h6>

  <div class="password-form-wrapper" style="display: none;">
    {% form 'customer' %}
      <div class="form-fields">
        <div class="form-group">
          <label for="CustomerCurrentPassword">Current Password</label>
          <div class="password-input-wrapper">
            <input type="password" name="customer[current_password]" id="CustomerCurrentPassword" required>
            <button type="button" class="toggle-password-visibility" aria-label="Toggle password visibility">
              <svg class="eye-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
              <svg class="eye-off-icon" style="display: none;" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>
            </button>
          </div>
        </div>

        <div class="form-group">
          <label for="CustomerNewPassword">New Password</label>
          <div class="password-input-wrapper">
            <input type="password" name="customer[password]" id="CustomerNewPassword" required>
            <button type="button" class="toggle-password-visibility" aria-label="Toggle password visibility">
              <svg class="eye-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
              <svg class="eye-off-icon" style="display: none;" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>
            </button>
          </div>
          <div class="password-strength-meter">
            <span class="strength-value"></span>
          </div>
        </div>

        <div class="form-group">
          <label for="CustomerPasswordConfirmation">Confirm New Password</label>
          <div class="password-input-wrapper">
            <input type="password" name="customer[password_confirmation]" id="CustomerPasswordConfirmation" required>
            <button type="button" class="toggle-password-visibility" aria-label="Toggle password visibility">
              <svg class="eye-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
              <svg class="eye-off-icon" style="display: none;" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>
            </button>
          </div>
        </div>
      </div>

      <input type="hidden" name="return_to" value="/account?password-updated=true#a">

      <div class="form-actions">
        <button type="submit" class="save-password-btn">Update</button>
        <button type="button" class="cancel-password-btn">Cancel</button>
      </div>
    {% endform %}
  </div>
</div>

<style>
.info-subtitle {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.address-edit-link, .toggle-password-form {
	color: var(--blue);
	transition: all 0.3s ease;
	display: flex;
	align-items: center;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
}

.address-edit-link:hover, .toggle-password-form:hover {
	transform: translateY(-2px);
	opacity: 0.8;
}

.add-address-link {
	color: var(--blue);
	text-decoration: underline;
	font-weight: 600;
}

.add-address-link:hover {
	opacity: 0.8;
}

.password-change-section {
  margin-top: 30px;
  border-top: 1px solid rgba(0,0,0,0.08);
  padding-top: 30px;
}

.password-form-wrapper {
  background-color: rgba(0,0,0,0.02);
  border-radius: 8px;
  padding: 20px;
  border: 1px solid rgba(0,0,0,0.08);
  margin-top: 15px;
}

.form-fields {
  display: grid;
  gap: 15px;
}

.form-group {
  margin-bottom: 0;
}

.form-group label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--dark);
  font-size: 14px;
}

.password-input-wrapper {
  position: relative;
}

.password-input-wrapper input {
  width: 100%;
  padding: 12px 15px;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 8px;
  font-size: 16px;
  padding-right: 40px;
}

.toggle-password-visibility {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: #999;
  cursor: pointer;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.password-strength-meter {
  margin-top: 6px;
  height: 3px;
  background-color: #eaeaea;
  border-radius: 2px;
  overflow: hidden;
}

.strength-value {
  display: block;
  height: 100%;
  width: 0;
  transition: width 0.3s ease, background-color 0.3s ease;
}

.form-actions {
  display: flex;
  gap: 10px;
  margin-top: 20px;
}

.save-password-btn, .cancel-password-btn {
  padding: 10px 20px;
  border-radius: 6px;
  font-weight: 600;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
  border: none;
  cursor: pointer;
}

.save-password-btn {
  background-color: var(--blue);
  color: white;
  flex: 1;
}

.cancel-password-btn {
  background-color: transparent;
  color: var(--blue);
  border: 1px solid var(--blue);
}

.save-password-btn:hover, .cancel-password-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.cancel-password-btn:hover {
  background-color: var(--blue);
  color: white;
}

.success-message {
  background-color: #e8f7e8;
  border: 1px solid #c6e6c6;
  border-radius: 8px;
  padding: 10px 16px;
  margin-bottom: 15px;
  display: flex;
  align-items: center;
}

.success-message p {
  color: #2c7b2c;
  margin: 0;
  font-weight: 500;
  font-size: 14px;
}
</style>

{% comment %}
  Success message handling for contact information updates
  This is shown when ?contact-updated=true is in the URL
{% endcomment %}
<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Check for query parameter indicating successful update
    const urlParams = new URLSearchParams(window.location.search);

    // Contact info update message
    if (urlParams.get('contact-updated') === 'true') {
      // Show success message if not already displayed
      const contactInfo = document.querySelector('.contact-info');
      if (contactInfo && !contactInfo.querySelector('.success-message')) {
        const successDiv = document.createElement('div');
        successDiv.className = 'success-message';
        successDiv.innerHTML = '<p>Your contact information has been updated successfully!</p>';
        contactInfo.insertBefore(successDiv, contactInfo.firstChild);

        // Auto remove after 5 seconds
        setTimeout(() => {
          successDiv.remove();
          // Remove the query parameter
          const url = new URL(window.location);
          url.searchParams.delete('contact-updated');
          window.history.replaceState({}, '', url);
        }, 5000);
      }
    }

    // Password update message
    if (urlParams.get('password-updated') === 'true') {
      const passwordSection = document.querySelector('.password-change-section');
      if (passwordSection && !passwordSection.querySelector('.success-message')) {
        const successDiv = document.createElement('div');
        successDiv.className = 'success-message';
        successDiv.innerHTML = '<p>Your password has been updated successfully!</p>';
        passwordSection.insertBefore(successDiv, passwordSection.querySelector('.password-form-wrapper'));

        // Auto remove after 5 seconds
        setTimeout(() => {
          successDiv.remove();
          // Remove the query parameter
          const url = new URL(window.location);
          url.searchParams.delete('password-updated');
          window.history.replaceState({}, '', url);
        }, 5000);
      }
    }

    // Toggle password form visibility
    const toggleFormBtn = document.querySelector('.toggle-password-form');
    const passwordForm = document.querySelector('.password-form-wrapper');
    const cancelBtn = document.querySelector('.cancel-password-btn');

    if (toggleFormBtn && passwordForm) {
      toggleFormBtn.addEventListener('click', function() {
        if (passwordForm.style.display === 'none') {
          passwordForm.style.display = 'block';
        } else {
          passwordForm.style.display = 'none';
        }
      });

      if (cancelBtn) {
        cancelBtn.addEventListener('click', function() {
          passwordForm.style.display = 'none';
        });
      }
    }

    // Toggle password visibility
    const togglePasswordBtns = document.querySelectorAll('.toggle-password-visibility');

    togglePasswordBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const passwordInput = this.previousElementSibling;
        const eyeIcon = this.querySelector('.eye-icon');
        const eyeOffIcon = this.querySelector('.eye-off-icon');

        if (passwordInput.type === 'password') {
          passwordInput.type = 'text';
          eyeIcon.style.display = 'none';
          eyeOffIcon.style.display = 'block';
        } else {
          passwordInput.type = 'password';
          eyeIcon.style.display = 'block';
          eyeOffIcon.style.display = 'none';
        }
      });
    });

    // Password strength meter
    const newPasswordInput = document.getElementById('CustomerNewPassword');
    const strengthBar = document.querySelector('.strength-value');

    if (newPasswordInput && strengthBar) {
      newPasswordInput.addEventListener('input', function() {
        const password = this.value;
        let strength = 0;

        if (password.length >= 8) strength += 1;
        if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength += 1;
        if (password.match(/\d/)) strength += 1;
        if (password.match(/[^a-zA-Z\d]/)) strength += 1;

        switch (strength) {
          case 0:
            strengthBar.style.width = '0%';
            break;
          case 1:
            strengthBar.style.width = '25%';
            strengthBar.style.backgroundColor = '#ff4d4d'; // Red
            break;
          case 2:
            strengthBar.style.width = '50%';
            strengthBar.style.backgroundColor = '#ffa64d'; // Orange
            break;
          case 3:
            strengthBar.style.width = '75%';
            strengthBar.style.backgroundColor = '#99cc00'; // Light Green
            break;
          case 4:
            strengthBar.style.width = '100%';
            strengthBar.style.backgroundColor = '#00cc44'; // Green
            break;
        }
      });

      // Password confirmation validation
      const confirmInput = document.getElementById('CustomerPasswordConfirmation');

      if (confirmInput) {
        confirmInput.addEventListener('input', function() {
          if (this.value !== newPasswordInput.value) {
            this.setCustomValidity('Passwords do not match');
          } else {
            this.setCustomValidity('');
          }
        });
      }
    }
  });
</script>