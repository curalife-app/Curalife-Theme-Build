<!-- Modern Clean Cart Design -->
<script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
<!-- Modern Clean Cart Design -->
<script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
<script>
  function updateQuantity(button, change) {
    const input = button.parentNode.querySelector('input');
    const currentValue = parseInt(input.value);
    const newValue = currentValue + change;
    if (newValue >= 0) {
      input.value = newValue;
      // If you have a form, you might need to submit it here
      // input.form.submit();
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.quantity-btn').forEach(function(button) {
      button.addEventListener('click', function() {
        const action = button.getAttribute('data-action');
        const change = action === 'increase-quantity' ? 1 : -1;
        updateQuantity(button, change);
      });
    });
  });
</script>

<style>
	:root {
		--color-primary: var(--curalin);
		--color-primary-dark: var(--curalin-dark);
		--color-text-main: #111827;
		--color-text-secondary: #6b7280;
		--color-border: #e5e7eb;
		--color-white: white;
		--color-danger: #ef4444;
		--color-shadow: rgba(0,0,0,0.1);
	}

	.cart {
		max-width: 1200px;
		margin: 4rem auto;
		padding: 0 1.5rem;
	}

	.cart-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 2rem;
	}

	.cart-header h1 {
		font-size: 1.875rem;
		font-weight: 600;
		color: var(--color-text-main);
	}

	.continue-shopping {
		color: var(--color-primary);
		text-decoration: none;
		font-weight: 500;
	}

	.cart-content {
		display: grid;
		grid-template-columns: 1fr 320px;
		gap: 2rem;
	}

	.cart-items {
		background: var(--color-white);
		border-radius: 1rem;
		box-shadow: 0 1px 3px var(--color-shadow);
	}

	.cart-item {
		display: grid;
		grid-template-columns: auto 1fr auto;
		gap: 1.5rem;
		padding: 1.5rem;
		border-bottom: 1px solid var(--color-border);
	}

	.cart-item:last-child {
		border-bottom: none;
	}

	.item-image {
		width: 100px;
		height: 100px;
		border-radius: 0.75rem;
		object-fit: cover;
	}

	.item-details h3 {
		font-size: 1rem;
		font-weight: 500;
		color: var(--color-text-main);
		margin-bottom: 0.5rem;
	}

	.item-options {
		font-size: 0.875rem;
		color: var(--color-text-secondary);
	}

	.item-price {
		color: var(--color-text-main);
		font-weight: 500;
	}

	.quantity-input {
		display: inline-flex;
		align-items: center;
		border: 1px solid var(--color-border);
		border-radius: 0.5rem;
	}

	.quantity-input input {
		width: 2.5rem;
		text-align: center;
		border: none;
		padding: 0.5rem 0;
		-webkit-appearance: none;
		-moz-appearance: textfield;
	}

	.quantity-input input::-webkit-outer-spin-button,
	.quantity-input input::-webkit-inner-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}

	.quantity-btn {
		border: none;
		color: var(--color-primary);
		cursor: pointer;
	}

	.remove-item {
		color: var(--color-danger);
		font-size: 0.875rem;
		text-decoration: none;
		margin-top: 0.5rem;
		display: inline-block;
	}

	.cart-summary {
		background: var(--color-white);
		border-radius: 1rem;
		padding: 1.5rem;
		position: sticky;
		top: 2rem;
		box-shadow: 0 1px 3px var(--color-shadow);
	}

	.summary-row {
		display: flex;
		justify-content: space-between;
		padding: 0.75rem 0;
		color: var(--color-text-secondary);
	}

	.summary-total {
		font-weight: 600;
		color: var(--color-text-main);
		font-size: 1.125rem;
		border-top: 1px solid var(--color-border);
		margin-top: 0.5rem;
		padding-top: 1rem;
	}

	.checkout-button {
		width: 100%;
		padding: 1rem;
		background: var(--color-primary);
		color: var(--color-white);
		border: none;
		border-radius: 0.5rem;
		font-weight: 500;
		margin-top: 1.5rem;
		cursor: pointer;
		transition: background-color 0.15s;
	}

	.checkout-button:hover {
		background: var(--color-primary-dark);
	}

	.cart-empty {
		text-align: center;
		padding: 4rem 2rem;
		background: var(--color-white);
		border-radius: 1rem;
		box-shadow: 0 1px 3px var(--color-shadow);
	}

	@media (max-width: 768px) {
		.cart { margin: 2rem auto; }
		.cart-content { grid-template-columns: 1fr; }
		.cart-summary { position: static; }
		.item-image { width: 80px; height: 80px; }
	}
</style>

<div class="cart">
  <div class="cart-header">
    <h1>Shopping Cart ({{ cart.item_count }})</h1>
    <a href="{{ routes.all_products_collection_url }}" class="continue-shopping">Continue Shopping</a>
  </div>

  {% if cart == empty %}
    <div class="cart-empty">
      <h2>Your cart is empty</h2>
      <a href="{{ routes.all_products_collection_url }}" class="checkout-button">Start Shopping</a>
    </div>
  {% else %}
    <div class="cart-content">
      <div class="cart-items">
        {% for item in cart.items %}
          <div class="cart-item" id="CartItem-{{ item.key }}">
            <img src="{{ item.image | img_url: 'medium' }}" alt="{{ item.title }}" class="item-image">

            <div class="item-details">
              <h3>{{ item.product.title }}</h3>
              {% if item.product.options_with_values.size > 0 %}
                <div class="item-options">
                  {% for option in item.product.options_with_values %}
                    {{ option.name }}: {{ option.value }}{% unless forloop.last %}, {% endunless %}
                  {% endfor %}
                </div>
              {% endif %}
              <div class="quantity-input quantity-selector">
                <button type="button" class="quantity-btn" data-action="decrease-quantity">âˆ’</button>
                <input type="number"
                       name="updates[]"
                       value="{{ item.quantity }}"
                       min="0"
                       aria-label="Quantity for {{ item.title | escape }}"
                       data-item-key="{{ item.key }}">
                <button type="button" class="quantity-btn" data-action="increase-quantity">+</button>
              </div>
              <a href="/cart/change?line={{ forloop.index }}&quantity=0" class="remove-item">Remove</a>
            </div>

            <div class="item-price">
              {{ item.final_line_price | money }}
            </div>
          </div>
        {% endfor %}
      </div>

      <div class="cart-summary">
        <div class="summary-row">
          <span>Subtotal</span>
          <span data-cart-subtotal>{{ cart.total_price | money }}</span>
        </div>
        {% if cart.total_discount > 0 %}
          <div class="summary-row">
            <span>Discount</span>
            <span>-{{ cart.total_discount | money }}</span>
          </div>
        {% endif %}
        <div class="summary-row summary-total">
          <span>Total</span>
          <span data-cart-total>{{ cart.total_price | money }}</span>
        </div>
        <button type="submit" name="update" class="checkout-button" style="margin-bottom: 1rem; background: #374151;">
          Update Cart
        </button>
        <button type="submit" name="checkout" class="checkout-button">
          Proceed to Checkout
        </button>
      </div>
    </div>
  {% endif %}
</div>

{% schema %}
{
  "name": "Cart",
  "settings": []
}
{% endschema %}