<div id="faq-{{ section_id }}" class="faq">
  {% for faqItem in faqItems %}
    <div class="faq-item last:border-b-0 border-b border-white">
      {% assign question = faqItem.question | default: faqItem | split: ":" | first %}
      {% assign answer = faqItem.answer | default: faqItem | split: ":" | last %}

      <h3 class="question h5 relative flex items-center py-6 m-0 cursor-pointer">
        {{ question | trim }}
      </h3>
      <div class="answer mb-4">
        {{ answer | trim }}
      </div>
    </div>
  {% endfor %}
</div>

<style>
  {% if titles_color %}
    #faq-{{ section_id }} .faq-item .question {
      color: {{ titles_color }};
    }
  {% endif %}

  #faq-{{ section_id }} .faq-item .question {
    padding: 1.5rem 3rem 1.5rem 0;
  }

  #faq-{{ section_id }} .faq-item .question p {
    margin-bottom: unset;
  }

  #faq-{{ section_id }} .faq-item .question + .answer {
    transition: margin-bottom .2s ease-out;
  }

  #faq-{{ section_id }} .faq-item .question:not(.active) + .answer {
    margin-bottom: 0;
  }

  #faq-{{ section_id }} .faq-item .question:after {
    content: "+";
    font-size: 2rem;
    position: absolute;
    right: 1rem;
    transition: transform 0.3s;
  }

  #faq-{{ section_id }} .faq-item .question.active:after {
    transform: rotate(45deg);
  }

  .faq-item .answer {
  overflow: hidden;
  transition: transform 0.3s ease, opacity 0.3s ease;
  height: auto; /* Set the actual height to auto */
  transform: scaleY(0);
  opacity: 0;
  transform-origin: top; /* Ensures the scaling is from the top */
}

.faq-item .answer.active {
  transform: scaleY(1);
  opacity: 1;
}

  @media screen and (max-width:768px) {
    #faq-{{ section_id }} .faq-item .question {
      font-size: 5vw;
    }

    #faq-{{ section_id }} .faq-item .answer {
      font-size: 4vw;
      line-height: 1.5;
    }
  }
</style>

<script>
  let accordionItemHeadersObject = document.querySelectorAll(".question");

  document.querySelectorAll(".question").forEach(accordionItemHeader => {
  accordionItemHeader.addEventListener("click", () => {
    const answerEl = accordionItemHeader.nextElementSibling;

    // Toggle active class on answer element
    answerEl.classList.toggle("active");

    // Optionally, handle one accordion open at a time
    if ({{ is_allow_one_open }}) {
      document.querySelectorAll(".faq-item .answer").forEach(el => {
        if (el !== answerEl) {
          el.classList.remove("active");
        }
      });
    }
  });
});

  {% if is_ingredients_feature %}
    faqIngredientsMainSliderAllInOne = new Swiper('.faq-section .ingredients-main-slider.swiper', {
      slidesPerView: 1,
      spaceBetween: 15,
      watchSlidesVisibility: false,
      loop: false,
      autoHeight: true,
      slideToClickedSlide: true,
      navigation: {
        nextEl: '.faq-section .swiper-button-next',
        prevEl: '.faq-section .swiper-button-prev',
        disabledClass: 'disabled'
      }
    });
  {% endif %}

  $('.question').click(function() {
    woopra.track('Open FAQ', {
      question_display_text: $(this).text(),
      question_order:  $(this).parents('.faq-item').index() + 1
    })
  });
</script>

<script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": [
      {% for textFAQItem in faqItems %}
        {% assign parsedTextFAQItem = textFAQItem | json %}
        {% if data_type == "json" %}
          {
            "@type": "Question",
            "name": "{{ textFAQItem.question | escape }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ textFAQItem.answer | escape }}"
            }
          }
        {% elsif data_type == "string" %}
          {
            "@type": "Question",
            "name": "{{ textFAQItem | split: ":" | first }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ textFAQItem | split: ":" | last }}"
            }
          }
        {% endif %}
        {% unless forloop.last %},{% endunless %}
      {% endfor %}
    ]
  }
</script>