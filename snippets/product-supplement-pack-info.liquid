{% comment %}
	Pack Info Section – Responsive Tabs on Mobile / Side‑by‑Side Panels on Desktop
{% endcomment %}
<section class="pack-info-section instance-{{ index }}">
	<div class="container">
		<!-- Header area with product title, description, highlights, and image -->
		<div class="header">
			<div class="titles">
				<h2 class="title">{{ product.title }}</h2>
				<div class="subtitle">{{ product.description }}</div>
				<ul class="highlights check-list">
					{% for highlight in product.metafields.custom['product-highlights'].value %}
						<li class="highlight">
							<strong>{{ highlight.title }}</strong><br>
							{{ highlight.subtitle }}
						</li>
					{% endfor %}
				</ul>
			</div>
			<img class="product-image" src="{{ product.metafields.custom.pill_image | img_url: 'original' }}" alt="{{ product.title }}" loading="lazy">
		</div>

		<!-- Tabbed content area -->
		<div class="tabbed-content">
			<!-- Mobile Tab Navigation -->
			<nav class="tabs">
				<ul>
					<li>
						<a href="#instructions-{{ index }}" data-tab="instructions">Usage Instructions</a>
					</li>
					{% if product.metafields.custom.ingredients.value %}
					<li>
						<a href="#ingredients-{{ index }}" data-tab="ingredients">Ingredients</a>
					</li>
					{% endif %}
					<li>
						<a href="#facts-{{ index }}" data-tab="facts">Supplement Facts</a>
					</li>
				</ul>
			</nav>

			<!-- Panels / Tab Content -->
			<div class="tab-panels">
				<!-- Usage Instructions Panel -->
				<div id="instructions-{{ index }}" class="tab-panel" data-tab="instructions">
					<h3 class="panel-header">Usage Instructions</h3>
					<div class="instructions">
						{% for step in product.metafields.custom.instructions.value %}
							<div class="step">
								<div class="capsules">
									{% for i in (1..step.capsules) %}
										{% if product.tags contains 'gummies' %}
											<img src="{{ 'icon-gummy.png' | asset_url }}" alt="Capsule Pill" width="20" height="31">
										{% else %}
											<img src="{{ 'icon-capsule.png' | asset_url }}" alt="Capsule Pill" width="20" height="31" style="min-width:35px">
										{% endif %}
									{% endfor %}
								</div>
								<div class="step-text">{{ step.subtitle }}</div>
							</div>
						{% endfor %}
					</div>
				</div>

				{% if product.metafields.custom.ingredients.value %}
				<!-- Ingredients Panel -->
				<div id="ingredients-{{ index }}" class="tab-panel" data-tab="ingredients">
					<h3 class="panel-header">Ingredients</h3>
					<div class="ingredients">
						{% for ingredient in product.metafields.custom.ingredients.value %}
							<div class="ingredient">
								{% assign ingredient_handle = ingredient | downcase | replace: ' ', '-' %}
								<img src="{{ 'product-supplement-pack-info-ingredient-icon-' | append: ingredient_handle | append: '.png' | asset_url }}" alt="{{ ingredient }}">
								<p>{{ ingredient }}</p>
							</div>
						{% endfor %}
					</div>
				</div>
				{% endif %}

				<!-- Supplement Facts Panel -->
				<div id="facts-{{ index }}" class="tab-panel" data-tab="facts">
					<h3 class="panel-header">Supplement Facts</h3>
					<div class="facts">
						<img src="{{ product.metafields.custom.supplement_fact | image_url }}" alt="Supplement Facts">
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	/* Base Styles */
	.pack-info-section {
		background: var(--primary-color-lightest);
		padding: 20px;
	}
	.pack-info-section .header {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: space-between;
		margin-bottom: 20px;
	}
	.pack-info-section .titles {
		max-width: 60%;
	}
	.pack-info-section .titles .check-list {
		list-style: none;
		padding: 0;
		margin: 0;
	}
	.pack-info-section .titles .highlight {
		margin-bottom: 10px;
	}
	.pack-info-section .product-image {
		max-width: 35%;
		height: auto;
	}

	/* Tabs Navigation (Mobile) */
	.tabbed-content .tabs ul {
		list-style: none;
		padding: 0;
		margin: 0 0 10px;
		display: flex;
		gap: 10px;
	}
	.tabbed-content .tabs li {
		margin: 0;
	}
	.tabbed-content .tabs a {
		display: block;
		padding: 8px 16px;
		background: #f0f0f0;
		border-radius: 4px;
		text-decoration: none;
		color: #333;
		border: 1px solid transparent;
	}
	.tabbed-content .tabs a.active {
		background: var(--light-green);
		color: #fff;
		border-color: var(--light-green);
	}

	/* Tab Panels */
	.tabbed-content .tab-panel {
		display: none;
	}
	.tabbed-content .tab-panel.active {
		display: block;
	}
	/* Panel Headers (only visible on desktop) */
	.panel-header {
		display: none;
		margin-bottom: 10px;
	}

	/* Mobile Styles (≤768px) */
	@media (max-width: 768px) {
		.tabbed-content .tabs {
			display: block;
		}
		.panel-header {
			display: none;
		}
	}

	/* Desktop Styles (≥800px) */
	@media (min-width: 800px) {
		.tabbed-content .tabs {
			display: none;
		}
		.tabbed-content .tab-panels {
			display: flex;
			gap: 20px;
		}
		.tabbed-content .tab-panel {
			display: block;
			flex: 1;
		}
		.panel-header {
			display: block;
			font-size: 1.5em;
			font-weight: bold;
			text-align: center;
			margin-bottom: 1em;
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", function() {
		var instanceSelector = '.pack-info-section.instance-{{ index }}';
		var container = document.querySelector(instanceSelector);
		if (!container) return;

		var tabs = container.querySelectorAll('.tabs a');
		var panels = container.querySelectorAll('.tab-panel');

		// Clears active classes from all tabs and panels.
		function clearActive() {
			tabs.forEach(function(tab) { tab.classList.remove('active'); });
			panels.forEach(function(panel) { panel.classList.remove('active'); });
		}

		// Activates the given tab and its corresponding panel.
		function activateTab(tab) {
			var targetId = tab.getAttribute('href');
			clearActive();
			tab.classList.add('active');
			var targetPanel = container.querySelector(targetId);
			if (targetPanel) {
				targetPanel.classList.add('active');
			}
		}

		// Initialize tabs based on viewport width.
		function initTabs() {
			if (window.innerWidth <= 768) {
				// On mobile, attach click events and set default active tab.
				tabs.forEach(function(tab) {
					tab.addEventListener('click', function(e) {
						e.preventDefault();
						activateTab(tab);
					});
				});
				if (tabs.length > 0) {
					activateTab(tabs[0]);
				}
			} else {
				// On desktop, show all panels.
				panels.forEach(function(panel) {
					panel.classList.add('active');
				});
			}
		}

		initTabs();

		// Reinitialize on window resize (debounced)
		window.addEventListener('resize', function() {
			clearTimeout(window.resizeTimeout);
			window.resizeTimeout = setTimeout(function() {
				if (window.innerWidth > 768) {
					panels.forEach(function(panel) {
						panel.classList.add('active');
					});
				} else {
					clearActive();
					if (tabs.length > 0) {
						activateTab(tabs[0]);
					}
				}
			}, 250);
		});
	});
</script>
